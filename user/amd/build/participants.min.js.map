{"version":3,"sources":["../src/participants.js"],"names":["Selectors","bulkUserCheckBoxes","bulkUserSelectedCheckBoxes","checkAllButton","stateHelpIcon","tableForm","uniqueId","init","uniqueid","noteStateNames","root","document","querySelector","getTableFromUniqueId","DynamicTableSelectors","main","fromRegionId","resetBulkAction","bulkActionSelect","value","showAddNote","users","length","Promise","resolve","states","key","push","label","selected","context","stateNames","innerHTML","titlePromise","Str","get_string","ModalFactory","create","type","types","SAVE_CANCEL","body","Templates","render","title","buttons","save","then","modal","getRoot","on","ModalEvents","hidden","bulkActionSelector","focus","submitAddNote","show","text","find","val","publishstate","notes","map","userid","courseid","dataset","courseId","Repository","createNotesForUsers","noteIds","msg","catch","Notification","exception","showSendMessage","submitSendMessage","messages","touserid","sendMessagesToUsers","messageIds","registerEventListeners","addEventListener","e","action","target","indexOf","preventDefault","tableRoot","ids","querySelectorAll","forEach","checkbox","getAttribute","replace","form","submit","closest","showAllLink","showalllink","window","location"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Some UI stuff for participants page.\n * This is also used by the report/participants/index.php because it has the same functionality.\n *\n * @module     core_user/participants\n * @package    core_user\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from './repository';\nimport * as Str from 'core/str';\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport {add as notifyUser} from 'core/toast';\n\nconst Selectors = {\n    bulkUserCheckBoxes: \"input.usercheckbox\",\n    bulkUserSelectedCheckBoxes: \"input.usercheckbox:checked\",\n    checkAllButton: \"#checkall\",\n    stateHelpIcon: '[data-region=\"state-help-icon\"]',\n    tableForm: uniqueId => `form[data-table-unique-id=\"${uniqueId}\"]`,\n};\n\nexport const init = ({\n    uniqueid,\n    noteStateNames = {},\n}) => {\n    const root = document.querySelector(Selectors.tableForm(uniqueid));\n    const getTableFromUniqueId = uniqueId => root.querySelector(DynamicTableSelectors.main.fromRegionId(uniqueId));\n\n    /**\n     * Private method.\n     *\n     * @method registerEventListeners\n     * @private\n     */\n    const registerEventListeners = () => {\n        root.querySelector(Selectors.bulkActionSelect).addEventListener('change', e => {\n            const action = e.target.value;\n\n            if (action.indexOf('#') !== -1) {\n                e.preventDefault();\n\n                const tableRoot = getTableFromUniqueId(uniqueid);\n                const ids = [];\n                tableRoot.querySelectorAll(Selectors.bulkUserSelectedCheckBoxes).forEach(checkbox => {\n                    ids.push(checkbox.getAttribute('name').replace('user', ''));\n                });\n\n                if (action === '#messageselect') {\n                    showSendMessage(ids).catch(Notification.exception);\n                } else if (action === '#addgroupnote') {\n                    showAddNote(ids).catch(Notification.exception);\n                }\n            } else if (action !== '') {\n                const tableRoot = getTableFromUniqueId(uniqueid);\n                if (tableRoot.querySelectorAll(Selectors.bulkUserSelectedCheckBoxes).length) {\n                    e.target.form().submit();\n                }\n            }\n\n            resetBulkAction(e.target);\n        });\n\n        root.addEventListener('click', e => {\n            const checkAllButton = e.target.closest(Selectors.checkAllButton);\n            if (checkAllButton) {\n                const showAllLink = checkAllButton.dataset.showalllink;\n                if (showAllLink) {\n                    window.location = showAllLink;\n                }\n            }\n        });\n    };\n\n    const resetBulkAction = bulkActionSelect => {\n        bulkActionSelect.value = '';\n    };\n\n    /**\n     * Show the add note popup\n     *\n     * @param {int[]} users\n     * @return {Promise}\n     */\n    const showAddNote = users => {\n        if (!users.length) {\n            // No users were selected.\n            return Promise.resolve();\n        }\n\n        const states = [];\n        for (let key in noteStateNames) {\n            switch (key) {\n                case 'draft':\n                    states.push({value: 'personal', label: noteStateNames[key]});\n                    break;\n                case 'public':\n                    states.push({value: 'course', label: noteStateNames[key], selected: 1});\n                    break;\n                case 'site':\n                    states.push({value: key, label: noteStateNames[key]});\n                    break;\n            }\n        }\n\n        const context = {\n            stateNames: states,\n            stateHelpIcon: root.querySelector(Selectors.stateHelpIcon).innerHTML,\n        };\n\n        let titlePromise = null;\n        if (users.length === 1) {\n            titlePromise = Str.get_string('addbulknotesingle', 'core_notes');\n        } else {\n            titlePromise = Str.get_string('addbulknote', 'core_notes', users.length);\n        }\n\n        return ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            body: Templates.render('core_user/add_bulk_note', context),\n            title: titlePromise,\n            buttons: {\n                save: titlePromise,\n            },\n        })\n        .then(modal => {\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                // Focus on the action select when the dialog is closed.\n                const bulkActionSelector = root.querySelector(Selectors.bulkActionSelect);\n                resetBulkAction(bulkActionSelector);\n                bulkActionSelector.focus();\n            });\n\n            modal.getRoot().on(ModalEvents.save, () => {\n                submitAddNote(modal, users);\n            });\n\n            modal.show();\n\n            return modal;\n        });\n    };\n\n    /**\n     * Add a note to this list of users.\n     *\n     * @param {Modal} modal\n     * @param {Number[]} users\n     * @return {Promise}\n     */\n    const submitAddNote = (modal, users) => {\n        const text = modal.getRoot().find('form textarea').val();\n        const publishstate = modal.getRoot().find('form select').val();\n\n        const notes = users.map(userid => {\n            return {\n                userid,\n                text,\n                courseid: root.dataset.courseId,\n                publishstate,\n            };\n        });\n\n        return Repository.createNotesForUsers(notes)\n        .then(noteIds => {\n            if (noteIds.length === 1) {\n                return Str.get_string('addbulknotedonesingle', 'core_notes');\n            } else {\n                return Str.get_string('addbulknotedone', 'core_notes', noteIds.length);\n            }\n        })\n        .then(msg => notifyUser(msg))\n        .catch(Notification.exception);\n    };\n\n    /**\n     * Show the send message popup.\n     *\n     * @param {Number[]} users\n     * @return {Promise}\n     */\n    const showSendMessage = users => {\n        if (!users.length) {\n            // Nothing to do.\n            return Promise.resolve();\n        }\n\n        let titlePromise;\n        if (users.length === 1) {\n            titlePromise = Str.get_string('sendbulkmessagesingle', 'core_message');\n        } else {\n            titlePromise = Str.get_string('sendbulkmessage', 'core_message', users.length);\n        }\n\n        return ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            body: Templates.render('core_user/send_bulk_message', {}),\n            title: titlePromise,\n            buttons: {\n                save: titlePromise,\n            },\n        })\n        .then(modal => {\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                // Focus on the action select when the dialog is closed.\n                const bulkActionSelector = root.querySelector(Selectors.bulkActionSelect);\n                resetBulkAction(bulkActionSelector);\n                bulkActionSelector.focus();\n            });\n\n            modal.getRoot().on(ModalEvents.save, () => {\n                submitSendMessage(modal, users);\n            });\n\n            modal.show();\n\n            return modal;\n        });\n    };\n\n    /**\n     * Send a message to these users.\n     *\n     * @param {Modal} modal\n     * @param {Number[]} users\n     * @return {Promise}\n     */\n    const submitSendMessage = (modal, users) => {\n        const text = modal.getRoot().find('form textarea').val();\n\n        const messages = users.map(touserid => {\n            return {\n                touserid,\n                text,\n            };\n        });\n\n        return Repository.sendMessagesToUsers(messages)\n        .then(messageIds => {\n            if (messageIds.length == 1) {\n                return Str.get_string('sendbulkmessagesentsingle', 'core_message');\n            } else {\n                return Str.get_string('sendbulkmessagesent', 'core_message', messageIds.length);\n            }\n        })\n        .then(msg => notifyUser(msg))\n        .catch(Notification.exception);\n    };\n\n    registerEventListeners();\n};\n"],"file":"participants.min.js"}