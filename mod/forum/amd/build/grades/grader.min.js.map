{"version":3,"sources":["../../src/grades/grader.js"],"names":["templateNames","contentRegion","getWholeForumFunctions","cmid","getPostContextFunction","userid","Repository","getDiscussionByUserID","getContentForUser","getContentForUserIdFunction","postContextFunction","then","context","Templates","render","catch","Notification","exception","getUserList","getUsersForCmidFunction","CourseRepository","getUsersFromCourseModuleID","findGradableNode","node","closest","Selectors","gradableItem","registerLaunchListeners","document","addEventListener","e","target","matches","launch","rootNode","Error","gradableItems","wholeForum","dataset","Grader","initialUserId","initialuserid","groupid","preventDefault"],"mappings":"wSAuBA,OACA,OACA,OACA,OACA,OACA,O,oXAEMA,CAAAA,CAAa,CAAG,CAClBC,aAAa,CAAE,yCADG,C,CAIhBC,CAAsB,CAAG,SAACC,CAAD,CAAU,IAC/BC,CAAAA,CAAsB,CAAG,UAAM,CACjC,MAAO,UAACC,CAAD,CAAY,CACf,MAAOC,WAAWC,qBAAX,CAAiCF,CAAjC,CAAyCF,CAAzC,CACV,CACJ,CALoC,CA4BrC,MAAO,CACHK,iBAAiB,CAtBe,QAA9BC,CAAAA,2BAA8B,EAAM,CACtC,GAAMC,CAAAA,CAAmB,CAAGN,CAAsB,CAACD,CAAD,CAAlD,CACA,MAAO,UAACE,CAAD,CAAY,CACf,MAAOK,CAAAA,CAAmB,CAACL,CAAD,CAAnB,CACFM,IADE,CACG,SAACC,CAAD,CAAa,CACf,MAAOC,WAAUC,MAAV,CAAiBd,CAAa,CAACC,aAA/B,CAA8CW,CAA9C,CACV,CAHE,EAIFG,KAJE,CAIIC,UAAaC,SAJjB,CAKV,CACJ,CAasB,EADhB,CAEHC,WAAW,CAZiB,QAA1BC,CAAAA,uBAA0B,EAAM,CAClC,MAAO,UAAChB,CAAD,CAAU,CACb,MAAOiB,WAAiBC,0BAAjB,CAA4ClB,CAA5C,EACFQ,IADE,CACG,SAACC,CAAD,CAAa,CACf,MAAOA,CAAAA,CACV,CAHE,EAIFG,KAJE,CAIIC,UAAaC,SAJjB,CAKV,CACJ,CAIgB,EAFV,CAIV,C,CAEKK,CAAgB,CAAG,SAACC,CAAD,CAAU,CAC/B,MAAOA,CAAAA,CAAI,CAACC,OAAL,CAAaC,CAAS,CAACC,YAAvB,CACV,C,2BAEsC,QAA1BC,CAAAA,uBAA0B,EAAM,CACzCC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAACC,CAAD,CAAO,CACtC,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBP,CAAS,CAACQ,MAA3B,CAAJ,CAAwC,CACpC,GAAMC,CAAAA,CAAQ,CAAGZ,CAAgB,CAACQ,CAAC,CAACC,MAAH,CAAjC,CAEA,GAAI,CAACG,CAAL,CAAe,CACX,KAAMC,CAAAA,KAAK,CAAC,gCAAD,CACd,CAED,GAAID,CAAQ,CAACF,OAAT,CAAiBP,CAAS,CAACW,aAAV,CAAwBC,UAAzC,CAAJ,CAA0D,OAIlDnC,CAAsB,CAACgC,CAAQ,CAACI,OAAT,CAAiBnC,IAAlB,CAJ4B,CAElDe,CAFkD,GAElDA,WAFkD,CAGlDV,CAHkD,GAGlDA,iBAHkD,CAMtD+B,CAAM,CAACN,MAAP,CACIf,CADJ,CAEIV,CAFJ,CAGI,CACIgC,aAAa,CAAEN,CAAQ,CAACI,OAAT,CAAiBG,aADpC,CAEIC,OAAO,CAAER,CAAQ,CAACI,OAAT,CAAiBI,OAF9B,CAHJ,EASAZ,CAAC,CAACa,cAAF,EACH,CAhBD,IAgBO,CACH,KAAMR,CAAAA,KAAK,CAAC,sCAAD,CACd,CACJ,CACJ,CA5BD,CA6BH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/grades/grader\n * @package    mod_forum\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as Selectors from './grader/selectors';\nimport Repository from 'mod_forum/repository';\nimport Templates from 'core/templates';\nimport * as Grader from '../local/grades/grader';\nimport Notification from 'core/notification';\nimport CourseRepository from 'core_course/repository';\n\nconst templateNames = {\n    contentRegion: 'mod_forum/forum_grader_discussion_posts',\n};\n\nconst getWholeForumFunctions = (cmid) => {\n    const getPostContextFunction = () => {\n        return (userid) => {\n            return Repository.getDiscussionByUserID(userid, cmid);\n        };\n    };\n\n    const getContentForUserIdFunction = () => {\n        const postContextFunction = getPostContextFunction(cmid);\n        return (userid) => {\n            return postContextFunction(userid)\n                .then((context) => {\n                    return Templates.render(templateNames.contentRegion, context);\n                })\n                .catch(Notification.exception);\n        };\n    };\n\n    const getUsersForCmidFunction = () => {\n        return (cmid) => {\n            return CourseRepository.getUsersFromCourseModuleID(cmid)\n                .then((context) => {\n                    return context;\n                })\n                .catch(Notification.exception);\n        };\n    };\n\n    return {\n        getContentForUser: getContentForUserIdFunction(),\n        getUserList: getUsersForCmidFunction()\n    };\n};\n\nconst findGradableNode = (node) => {\n    return node.closest(Selectors.gradableItem);\n};\n\nexport const registerLaunchListeners = () => {\n    document.addEventListener('click', (e) => {\n        if (e.target.matches(Selectors.launch)) {\n            const rootNode = findGradableNode(e.target);\n\n            if (!rootNode) {\n                throw Error('Unable to find a gradable item');\n            }\n\n            if (rootNode.matches(Selectors.gradableItems.wholeForum)) {\n                const {\n                    getUserList,\n                    getContentForUser,\n                } = getWholeForumFunctions(rootNode.dataset.cmid);\n\n                Grader.launch(\n                    getUserList,\n                    getContentForUser,\n                    {\n                        initialUserId: rootNode.dataset.initialuserid,\n                        groupid: rootNode.dataset.groupid,\n                    }\n                );\n\n                e.preventDefault();\n            } else {\n                throw Error('Unable to find a valid gradable item');\n            }\n        }\n    });\n};\n"],"file":"grader.min.js"}