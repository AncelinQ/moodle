{"version":3,"sources":["../../src/grades/expandconversation.js"],"names":["registerEventListeners","contentRegion","document","querySelector","ForumSelectors","posts","addEventListener","e","rootNode","findGradableNode","target","preventDefault","postId","dataset","postid","discussionId","discussionid","discussionName","name","Repository","getDiscussionPosts","parseInt","then","context","Modal","create","title","body","Templates","render","type","types","CANCEL","modal","getRoot","on","ModalEvents","hidden","destroy","setLarge","show","root","postModal","element","scrollIntoView","behavior","catch","Notification","exception","node","closest","expandConversation"],"mappings":"gUAuBA,OACA,OACA,OACA,OACA,OACA,O,iXAEO,GAAMA,CAAAA,CAAsB,CAAG,UAAM,CACxC,GAAMC,CAAAA,CAAa,CAAGC,QAAQ,CAACC,aAAT,CAAuBC,CAAc,CAACC,KAAtC,CAAtB,CACAJ,CAAa,CAACK,gBAAd,CAA+B,OAA/B,CAAwC,SAACC,CAAD,CAAO,CAC3C,GAAMC,CAAAA,CAAQ,CAAGC,CAAgB,CAACF,CAAC,CAACG,MAAH,CAAjC,CACAH,CAAC,CAACI,cAAF,GAF2C,GAGrCC,CAAAA,CAAM,CAAGJ,CAAQ,CAACK,OAAT,CAAiBC,MAHW,CAIrCC,CAAY,CAAGP,CAAQ,CAACK,OAAT,CAAiBG,YAJK,CAKrCC,CAAc,CAAGT,CAAQ,CAACK,OAAT,CAAiBK,IALG,CAM3CC,UAAWC,kBAAX,CAA8BC,QAAQ,CAACN,CAAD,CAAtC,EACKO,IADL,CACU,SAACC,CAAD,CAAa,CACf,MAAOC,CAAAA,CAAK,CAACC,MAAN,CAAa,CAChBC,KAAK,CAAET,CADS,CAEhBU,IAAI,CAAEC,UAAUC,MAAV,CAAiB,+CAAjB,CAAkEN,CAAlE,CAFU,CAGhBO,IAAI,CAAEN,CAAK,CAACO,KAAN,CAAYC,MAHF,CAAb,CAKV,CAPL,EAQKV,IARL,CAQU,SAACW,CAAD,CAAW,CAEbA,CAAK,CAACC,OAAN,GAAgBC,EAAhB,CAAmBC,CAAW,CAACC,MAA/B,CAAuC,UAAW,CAE9CJ,CAAK,CAACK,OAAN,EACH,CAHD,EAIAL,CAAK,CAACM,QAAN,GACAN,CAAK,CAACO,IAAN,GAPa,GASPC,CAAAA,CAAI,CAAGvC,QAAQ,CAACC,aAAT,CAAuBC,CAAc,CAACsC,SAAtC,CATA,CAUPC,CAAO,CAAGF,CAAI,CAACtC,aAAL,aAAwBS,CAAxB,EAVH,CAYb+B,CAAO,CAACC,cAAR,CAAuB,CAACC,QAAQ,CAAE,QAAX,CAAvB,CACH,CArBL,EAsBKC,KAtBL,CAsBWC,UAAaC,SAtBxB,CAuBH,CA7BD,CA8BH,CAhCM,C,2BAkCP,GAAMvC,CAAAA,CAAgB,CAAG,SAACwC,CAAD,CAAU,CAC/B,MAAOA,CAAAA,CAAI,CAACC,OAAL,CAAa9C,CAAc,CAAC+C,kBAA5B,CACV,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/grades/expandconversation\n * @package    mod_forum\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as ForumSelectors from './grader/selectors';\nimport Repository from 'mod_forum/repository';\nimport Notification from \"../../../../../lib/amd/src/notification\";\nimport Templates from 'core/templates';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\n\nexport const registerEventListeners = () => {\n    const contentRegion = document.querySelector(ForumSelectors.posts);\n    contentRegion.addEventListener('click', (e) => {\n        const rootNode = findGradableNode(e.target);\n        e.preventDefault();\n        const postId = rootNode.dataset.postid;\n        const discussionId = rootNode.dataset.discussionid;\n        const discussionName = rootNode.dataset.name;\n        Repository.getDiscussionPosts(parseInt(discussionId))\n            .then((context) => {\n                return Modal.create({\n                    title: discussionName,\n                    body: Templates.render('mod_forum/grades/grader/discussion/post_modal', context),\n                    type: Modal.types.CANCEL\n                });\n            })\n            .then((modal) => {\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n                modal.setLarge();\n                modal.show();\n\n                const root = document.querySelector(ForumSelectors.postModal);\n                const element = root.querySelector(`#p${postId}`);\n\n                element.scrollIntoView({behavior: \"smooth\"});\n            })\n            .catch(Notification.exception);\n    });\n};\n\nconst findGradableNode = (node) => {\n    return node.closest(ForumSelectors.expandConversation);\n};\n"],"file":"expandconversation.min.js"}