{"version":3,"sources":["../../../src/local/grades/grader.js"],"names":["templateNames","grader","app","getFetchAndShowUserCallback","container","getContentForUser","userObject","contentForUser","querySelector","Selectors","regions","content","innerHTML","displayUserPicker","userPicker","displayGrader","Templates","replaceNodeContents","registerEventListeners","graderLayout","addEventListener","e","target","matches","buttons","toggleFullscreen","stopImmediatePropagation","preventDefault","closeGrader","close","launch","getListOfUsers","initialUserId","Promise","all","fullscreen","render","graderHTMLLayout","userList","graderContainer","getContainer","currentUser","showUser","window","console","log"],"mappings":"kQAuBA,OACA,OAEA,O,8xBAEMA,CAAAA,CAAa,CAAG,CAClBC,MAAM,CAAE,CACJC,GAAG,CAAE,+BADD,CADU,C,CAMhBC,CAA2B,CAAG,SAACC,CAAD,CAAYC,CAAZ,CAAkC,CAClE,kDAAO,WAAMC,CAAN,yFACP,SADO,eAE0BD,CAAAA,CAAiB,CAACC,CAAD,CAF3C,QAEGC,CAFH,QAGHH,CAAS,CAACI,aAAV,CAAwBC,UAAUC,OAAV,CAAkBC,OAA1C,EAAmDC,SAAnD,CAA+DL,CAA/D,CAHG,wCAAP,uDAKH,C,CAEKM,CAAiB,CAAG,SAACT,CAAD,CAAYO,CAAZ,CAAwB,CAC9CP,CAAS,CAACI,aAAV,CAAwBC,UAAUC,OAAV,CAAkBI,UAA1C,EAAsDF,SAAtD,CAAkED,CACrE,C,CAEKI,CAAa,CAAG,SAACX,CAAD,CAAYO,CAAZ,CAAwB,CAC1CK,UAAUC,mBAAV,CAA8Bb,CAA9B,CAAyCO,CAAzC,CAAkD,EAAlD,CACH,C,CAEKO,CAAsB,CAAG,SAACC,CAAD,CAAef,CAAf,CAA6B,CACxDA,CAAS,CAACgB,gBAAV,CAA2B,OAA3B,CAAoC,SAACC,CAAD,CAAO,CACvC,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBd,UAAUe,OAAV,CAAkBC,gBAAnC,CAAJ,CAA0D,CACtDJ,CAAC,CAACK,wBAAF,GACAL,CAAC,CAACM,cAAF,GAEAR,CAAY,CAACM,gBAAb,EACH,CALD,IAKO,IAAIJ,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBd,UAAUe,OAAV,CAAkBI,WAAnC,CAAJ,CAAqD,CACxDP,CAAC,CAACK,wBAAF,GACAL,CAAC,CAACM,cAAF,GAEAR,CAAY,CAACU,KAAb,EACH,CACJ,CAZD,CAaH,C,CAEYC,CAAM,4CAAG,WAClBC,CADkB,CAElB1B,CAFkB,gKAId,EAJc,KAGd2B,aAHc,CAGdA,CAHc,YAGE,IAHF,kBAWRC,CAAAA,OAAO,CAACC,GAAR,CAAY,CAClB,mBAAuB,CAACC,UAAU,GAAX,CAAvB,CADkB,CAElBnB,UAAUoB,MAAV,CAAiBpC,CAAa,CAACC,MAAd,CAAqBC,GAAtC,CAA2C,EAA3C,CAFkB,CAGlB6B,CAAc,EAHI,CAAZ,CAXQ,0BAQdZ,CARc,MASdkB,CATc,MAUdC,CAVc,MAiBZC,CAjBY,CAiBMpB,CAAY,CAACqB,YAAb,EAjBN,CAkBdC,CAlBc,CAkBA,CAlBA,CAsBlB,GAAIT,CAAJ,CAAmB,CACfS,CAAW,CAAGH,CAAQ,CAACN,CAAD,CACzB,CAFD,IAEO,CACHS,CAAW,CAAGH,CAAQ,CAAC,CAAD,CACzB,CAGKI,CA7BY,CA6BDvC,CAA2B,CAACoC,CAAD,CAAkBlC,CAAlB,CA7B1B,CAgClBU,CAAa,CAACwB,CAAD,CAAkBF,CAAlB,CAAb,CAGAnB,CAAsB,CAACC,CAAD,CAAeoB,CAAf,CAAtB,CACA,SApCkB,gBAuCSN,CAAAA,OAAO,CAACC,GAAR,CAAY,CACnC,cAAiBI,CAAjB,CAA2BG,CAA3B,CAAwCC,CAAxC,CADmC,CAEnCA,CAAQ,CAACD,CAAD,CAF2B,CAAZ,CAvCT,2BAuCX3B,CAvCW,MA2ClB6B,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB/B,CAAnB,EACA,SAGAD,CAAiB,CAAC0B,CAAD,CAAkBzB,CAAlB,CAAjB,CA/CkB,yCAAH,uD","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     core_grades/unified_grader\n * @package    core_grades\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport Selectors from './local/grader/selectors';\nimport {createLayout as createFullScreenWindow} from 'mod_forum/local/layout/fullscreen';\nimport createUserPicker from './local/grader/userpicker';\n\nconst templateNames = {\n    grader: {\n        app: 'mod_forum/local/grades/grader',\n    },\n};\n\nconst getFetchAndShowUserCallback = (container, getContentForUser) => {\n    return async(userObject) => {\n    debugger; // eslint-disable-line\n        const contentForUser = await getContentForUser(userObject);\n        container.querySelector(Selectors.regions.content).innerHTML = contentForUser;\n    };\n};\n\nconst displayUserPicker = (container, content) => { // eslint-disable-line\n    container.querySelector(Selectors.regions.userPicker).innerHTML = content;\n};\n\nconst displayGrader = (container, content) => {\n    Templates.replaceNodeContents(container, content, '');\n};\n\nconst registerEventListeners = (graderLayout, container) => {\n    container.addEventListener('click', (e) => {\n        if (e.target.matches(Selectors.buttons.toggleFullscreen)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.toggleFullscreen();\n        } else if (e.target.matches(Selectors.buttons.closeGrader)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.close();\n        }\n    });\n};\n\nexport const launch = async(\n    getListOfUsers,\n    getContentForUser, {\n        initialUserId = null,\n    } = {}\n) => {\n    // Fetch the layout (fetch + render template), and list of users in parallel synchronously.\n    const [\n        graderLayout,\n        graderHTMLLayout,\n        userList,\n    ] = await Promise.all([\n        createFullScreenWindow({fullscreen: false}),\n        Templates.render(templateNames.grader.app, {}),\n        getListOfUsers(),\n    ]);\n\n    const graderContainer = graderLayout.getContainer();\n    let currentUser = 0;\n\n    // TODO: Does userList give us an object of userid => userdata; or an array of index => useridata\n    // Assuming an Object of userid => userdata for now.\n    if (initialUserId) {\n        currentUser = userList[initialUserId];\n    } else {\n        currentUser = userList[0];\n    }\n\n    // Create the set user callback\n    const showUser = getFetchAndShowUserCallback(graderContainer, getContentForUser);\n\n    // Add the grader to the main layout.\n    displayGrader(graderContainer, graderHTMLLayout);\n\n    // Add event listeners\n    registerEventListeners(graderLayout, graderContainer);\n    debugger; // eslint-disable-line\n\n    // Create the user picker and get the content forthe first user.\n    const [userPicker] = await Promise.all([\n        createUserPicker(userList, currentUser, showUser),\n        showUser(currentUser), // eslint-disable-line\n    ]);\n    window.console.log(userPicker);\n    debugger; // eslint-disable-line\n\n    // Display the picker\n    displayUserPicker(graderContainer, userPicker);\n};\n"],"file":"grader.min.js"}