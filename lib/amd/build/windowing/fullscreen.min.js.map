{"version":3,"sources":["../../src/windowing/fullscreen.js"],"names":["templateNames","window","getHelpers","windowNode","getBody","firstElementChild","remove","getFullScreenWindow","document","createElement","classList","add","LoadingIcon","addIconToContainer","body","append","Promise","resolve","Templates","render","then","html","js","appendNodeContents","catch","notifyException"],"mappings":"oMAAA,OAEA,O,qXAEMA,CAAAA,CAAa,CAAG,CAElBC,MAAM,CAAE,iBAFU,C,CAKhBC,CAAU,CAAG,SAACC,CAAD,CAAgB,CAS/B,MAAO,CACHA,UAAU,CAAVA,CADG,CAEHC,OAAO,CAVK,QAAVA,CAAAA,OAAU,EAAM,CAClB,MAAOD,CAAAA,CAAU,CAACE,iBACrB,CAMM,CAGHC,MAAM,CAPK,QAATA,CAAAA,MAAS,EAAM,CACjBH,CAAU,CAACG,MAAX,EACH,CAEM,CAKV,C,CAEKC,CAAmB,CAAG,UAAM,CAC9B,GAAMJ,CAAAA,CAAU,CAAGK,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB,CACAN,CAAU,CAACO,SAAX,CAAqBC,GAArB,CAAyB,YAAzB,EACAC,UAAYC,kBAAZ,CAA+BV,CAA/B,EACAK,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqBZ,CAArB,EAEA,MAAO,IAAIa,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAa,CAC5BC,UAAUC,MAAV,CAAiBnB,CAAa,CAACC,MAA/B,CAAuC,EAAvC,EACCmB,IADD,CACM,SAACC,CAAD,CAAOC,CAAP,CAAc,CAChB,MAAOJ,WAAUK,kBAAV,CAA6BpB,CAA7B,CAAyCkB,CAAzC,CAA+CC,CAA/C,CACV,CAHD,EAICF,IAJD,CAIM,UAAM,CACR,MAAOH,CAAAA,CAAO,CAACd,CAAD,CACjB,CAND,EAOCqB,KAPD,CAOOC,WAPP,CAQH,CATM,CAUV,C,sFAMc,mHACUlB,CAAAA,CAAmB,EAD7B,QACLN,CADK,iCAGJC,CAAU,CAACD,CAAD,CAHN,0C","sourcesContent":["import Templates from 'core/templates';\nimport {exception as notifyException} from 'core/notification';\nimport LoadingIcon from 'core/loadingicon';\n\nconst templateNames = {\n    // TODO move this to subfolder once MDL-50346 lands.\n    window: 'core/fullscreen',\n};\n\nconst getHelpers = (windowNode) => {\n    const getBody = () => {\n        return windowNode.firstElementChild;\n    };\n\n    const remove = () => {\n        windowNode.remove();\n    };\n\n    return {\n        windowNode,\n        getBody,\n        remove,\n    };\n};\n\nconst getFullScreenWindow = () => {\n    const windowNode = document.createElement('div');\n    windowNode.classList.add('fullscreen');\n    LoadingIcon.addIconToContainer(windowNode);\n    document.body.append(windowNode);\n\n    return new Promise((resolve) => {\n        Templates.render(templateNames.window, {})\n        .then((html, js) => {\n            return Templates.appendNodeContents(windowNode, html, js);\n        })\n        .then(() => {\n            return resolve(windowNode);\n        })\n        .catch(notifyException);\n    });\n};\n\n/**\n * @param {Object} configuration\n * @returns {Object} Functions\n */\nexport default async function() {\n    const window = await getFullScreenWindow();\n\n    return getHelpers(window);\n}\n"],"file":"fullscreen.min.js"}