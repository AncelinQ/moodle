{"version":3,"sources":["../src/aria.js"],"names":["hide","target","HTMLElement","closest","Selectors","aria","hidden","setAttribute","dataset","ariaHiddenTabIndex","getAttribute","querySelectorAll","elements","focusable","forEach","focusableNode","unhide","removeAttribute","focusableToUnhide","oldTabIndex","hideSiblings","parentElement","childNodes","node","unhideSiblings"],"mappings":"4LAyBA,uDAOO,GAAMA,CAAAA,CAAI,CAAG,SAAAC,CAAM,CAAI,CAC1B,GAAI,EAAEA,CAAM,WAAYC,CAAAA,WAApB,CAAJ,CAAsC,CAGlC,MACH,CAED,GAAID,CAAM,CAACE,OAAP,CAAeC,UAAUC,IAAV,CAAeC,MAA9B,CAAJ,CAA2C,CAGvC,MACH,CAGDL,CAAM,CAACM,YAAP,CAAoB,aAApB,KAGAN,CAAM,CAACO,OAAP,CAAeC,kBAAf,CAAoCR,CAAM,CAACS,YAAP,CAAoB,UAApB,CAApC,CACAT,CAAM,CAACM,YAAP,CAAoB,UAApB,CAAgC,CAAC,CAAjC,EAIAN,CAAM,CAACU,gBAAP,CAAwBP,UAAUQ,QAAV,CAAmBC,SAA3C,EAAsDC,OAAtD,CAA8D,SAAAC,CAAa,CAAI,CAC3E,GAAwD,WAApD,QAAOA,CAAAA,CAAa,CAACP,OAAd,CAAsBC,kBAAjC,CAAqE,CAGjE,MACH,CAEDM,CAAa,CAACP,OAAd,CAAsBC,kBAAtB,CAA2CM,CAAa,CAACL,YAAd,CAA2B,UAA3B,CAA3C,CACAK,CAAa,CAACR,YAAd,CAA2B,UAA3B,CAAuC,CAAC,CAAxC,CACH,CATD,CAUH,CAhCM,C,SAuCA,GAAMS,CAAAA,CAAM,CAAG,SAAAf,CAAM,CAAI,CAC5B,GAAI,EAAEA,CAAM,WAAYC,CAAAA,WAApB,CAAJ,CAAsC,CAClC,MACH,CAIDD,CAAM,CAACgB,eAAP,CAAuB,aAAvB,EAGAhB,CAAM,CAACU,gBAAP,CAAwBP,UAAUQ,QAAV,CAAmBM,iBAA3C,EAA8DJ,OAA9D,CAAsE,SAAAC,CAAa,CAAI,CACnF,GAAIA,CAAa,CAACZ,OAAd,CAAsBC,UAAUC,IAAV,CAAeC,MAArC,CAAJ,CAAkD,CAE9C,MACH,CAED,GAAMa,CAAAA,CAAW,CAAGJ,CAAa,CAACP,OAAd,CAAsBC,kBAA1C,CACA,GAAoB,IAAhB,GAAAU,CAAJ,CAA0B,CACtBJ,CAAa,CAACR,YAAd,CAA2B,UAA3B,CAAuCY,CAAvC,CACH,CAED,MAAOJ,CAAAA,CAAa,CAACP,OAAd,CAAsBC,kBAChC,CAZD,CAaH,CAvBM,C,0BA8BqB,QAAfW,CAAAA,YAAe,CAAAnB,CAAM,CAAI,CAClC,GAAI,EAAEA,CAAM,WAAYC,CAAAA,WAApB,CAAJ,CAAsC,CAClC,MACH,CAED,GAAI,CAACD,CAAM,CAACoB,aAAZ,CAA2B,CACvB,MACH,CAEDpB,CAAM,CAACoB,aAAP,CAAqBC,UAArB,CAAgCR,OAAhC,CAAwC,SAAAS,CAAI,CAAI,CAC5C,GAAIA,CAAI,GAAKtB,CAAb,CAAqB,CAEjB,MACH,CAEDD,CAAI,CAACuB,CAAD,CACP,CAPD,CAQH,C,kBAO6B,QAAjBC,CAAAA,cAAiB,CAAAvB,CAAM,CAAI,CACpC,GAAI,EAAEA,CAAM,WAAYC,CAAAA,WAApB,CAAJ,CAAsC,CAClC,MACH,CAED,GAAI,CAACD,CAAM,CAACoB,aAAZ,CAA2B,CACvB,MACH,CAEDpB,CAAM,CAACoB,aAAP,CAAqBC,UAArB,CAAgCR,OAAhC,CAAwC,SAAAS,CAAI,CAAI,CAC5C,GAAIA,CAAI,GAAKtB,CAAb,CAAqB,CAEjB,MACH,CAEDe,CAAM,CAACO,CAAD,CACT,CAPD,CAQH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helpers to perform ARIA compliance changes to the DOM.\n *\n * @module     core/aria\n * @class      aria\n * @package    core\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Selectors from './local/aria/selectors';\n\n/**\n * Update the supplied DOM Module to be hidden.\n *\n * @param {HTMLElement} target\n */\nexport const hide = target => {\n    if (!(target instanceof HTMLElement)) {\n        // This element is not an HTMLElement.\n        // This can happen for Text Nodes.\n        return;\n    }\n\n    if (target.closest(Selectors.aria.hidden)) {\n        // This Element, or a parent Element, is already hidden.\n        // Stop processing.\n        return;\n    }\n\n    // Set the aria-hidden attribute to true.\n    target.setAttribute('aria-hidden', true);\n\n    // Ensure that the element itself is not focusable.\n    target.dataset.ariaHiddenTabIndex = target.getAttribute('tabindex');\n    target.setAttribute('tabindex', -1);\n\n    // Based on advice from https://dequeuniversity.com/rules/axe/4.3/aria-hidden-focus, upon setting the aria-hidden\n    // attribute, all focusable elements underneath that element should be modified such that they are not focusable.\n    target.querySelectorAll(Selectors.elements.focusable).forEach(focusableNode => {\n        if (typeof focusableNode.dataset.ariaHiddenTabIndex !== 'undefined') {\n            // This child already has a hidden attribute.\n            // Do not modify it as the original value will be lost.\n            return;\n        }\n        // Store the old tabindex in a data attribute.\n        focusableNode.dataset.ariaHiddenTabIndex = focusableNode.getAttribute('tabindex');\n        focusableNode.setAttribute('tabindex', -1);\n    });\n};\n\n/**\n * Reverse the effect of the hide action.\n *\n * @param {HTMLElement} target\n */\nexport const unhide = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    // Note: The aria-hidden attribute should be removed, and not set to false.\n    // The presence of the attribute is sufficient for some browsers to treat it as being true, regardless of its value.\n    target.removeAttribute('aria-hidden');\n\n    // Restore the tabindex across all child nodes of the target.\n    target.querySelectorAll(Selectors.elements.focusableToUnhide).forEach(focusableNode => {\n        if (focusableNode.closest(Selectors.aria.hidden)) {\n            // This item still has a hidden parent, or is hidden itself. Do not unhide it.\n            return;\n        }\n\n        const oldTabIndex = focusableNode.dataset.ariaHiddenTabIndex;\n        if (oldTabIndex !== null) {\n            focusableNode.setAttribute('tabindex', oldTabIndex);\n        }\n\n        delete focusableNode.dataset.ariaHiddenTabIndex;\n    });\n};\n\n/**\n * Correctly mark all siblings of the supplied target Element as hidden.\n *\n * @param {HTMLElement} target\n */\nexport const hideSiblings = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    if (!target.parentElement) {\n        return;\n    }\n\n    target.parentElement.childNodes.forEach(node => {\n        if (node === target) {\n            // Skip self;\n            return;\n        }\n\n        hide(node);\n    });\n};\n\n/**\n * Correctly reverse the hide action of all children of the supplied target Element.\n *\n * @param {HTMLElement} target\n */\nexport const unhideSiblings = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    if (!target.parentElement) {\n        return;\n    }\n\n    target.parentElement.childNodes.forEach(node => {\n        if (node === target) {\n            // Skip self;\n            return;\n        }\n\n        unhide(node);\n    });\n};\n"],"file":"aria.min.js"}