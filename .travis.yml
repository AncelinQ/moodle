# PLEASE NOTE: Travis is not currently utilised by the Moodle core integration
# process (which uses our internal CI system) this file is here for the benefit
# of community developers git clones - see MDL-51458.

# We currently disable Travis notifications entirely until https://github.com/travis-ci/travis-ci/issues/4976
# is fixed.
notifications:
  email: false

language: php

os: linux

dist: xenial

services:
    - mysql
    - docker

php:
    # We only run the highest and lowest supported versions to reduce the load on travis-ci.org.
    - 7.4
    - 7.2

addons:
  postgresql: "9.6"

env:
    # Although we want to run these jobs and see failures as quickly as possible, we also want to get the slowest job to
    # start first so that the total run time is not too high.
    #
    # We only run MySQL on PHP 7.2, so run that first.
    # CI Tests should be second-highest in priority as these only take <= 60 seconds to run under normal circumstances.
    # Postgres is significantly is pretty reasonable in its run-time.

    # Run CI Tests without running PHPUnit.
    - DB=none     TASK=CITEST

    # Run unit tests on Postgres
    - DB=pgsql    TASK=PHPUNIT

    # Perform an upgrade test too.
    - DB=pgsql    TASK=UPGRADE

jobs:
    # Enable fast finish.
    # This will fail the build if a single job fails (except those in allow_failures).
    # It will not stop the jobs from running.
    fast_finish: true

    include:
          # Run mysql only on highest - it's just too slow
        - php: 7.4
          env: DB=mysqli   TASK=PHPUNIT
          # Run grunt/npm install on highest version too ('node' is an alias for the latest node.js version.)
        - php: 7.4
          env: DB=none     TASK=GRUNT   NVM_VERSION='lts/carbon'

cache:
    directories:
      - $HOME/.composer/cache
      - $HOME/.npm

before_install:
    - docker run -d -p 127.0.0.1:8080:80 --name exttests moodlehq/moodle-exttests
    # Avoid IPv6 default binding as service (causes redis not to start).
    - sudo service redis-server start --bind 127.0.0.1

before_script:
    - >
      if [ "$TASK" = 'PHPUNIT' -o "$TASK" = 'UPGRADE' ];
      then
        # Copy generic configuration in place.
        cp config-dist.php config.php ;

        # Create the moodledata directory.
        mkdir -p "$HOME"/roots/base

        # The database name and password.
        sed -i \
          -e "s%= 'moodle'%= 'travis_ci_test'%" \
          -e "s%= 'password'%= ''%" \
          config.php ;

        # The wwwroot and dataroot.
        sed -i \
          -e "s%http://example.com/moodle%https://localhost%" \
          -e "s%/home/example/moodledata%/home/travis/roots/base%" \
          config.php ;

        if [ "$DB" = 'pgsql' ];
        then
          # Postgres-specific setup.
          sed -i \
            -e "s%= 'username'%= 'postgres'%" \
            config.php ;

          psql -c 'CREATE DATABASE travis_ci_test;' -U postgres;
        fi

        if [ "$DB" = 'mysqli' ];
        then
          # MySQL-specific setup.
          sed -i \
            -e "s%= 'pgsql'%= 'mysqli'%" \
            -e "s%= 'username'%= 'travis'%" \
            -e "s%=> 'utf8mb4_unicode_ci'%=> 'utf8mb4_bin'%" \
            config.php;

          mysql -u root -e 'SET GLOBAL innodb_file_format=barracuda;' ;
          mysql -u root -e 'SET GLOBAL innodb_file_per_table=ON;' ;
          mysql -u root -e 'SET GLOBAL innodb_large_prefix=ON;' ;
          mysql -e 'CREATE DATABASE travis_ci_test DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_bin;' ;
        fi
      fi

    - >
        # Create a directory for the phpunit dataroot.
        mkdir -p "$HOME"/roots/phpunit

        # The phpunit dataroot and prefix..
        sed -i \
          -e "/require_once/i \\\$CFG->phpunit_dataroot = '\/home\/travis\/roots\/phpunit';" \
          -e "/require_once/i \\\$CFG->phpunit_prefix = 'p_';" \
          config.php ;
        # Enable test external resources
        sed -i \
          -e "/require_once/i \\define('TEST_EXTERNAL_FILES_HTTP_URL', 'http://127.0.0.1:8080');" \
          config.php ;
        # Redis cache store tests
        sed -i \
          -e "/require_once/i \\define('TEST_CACHESTORE_REDIS_TESTSERVERS', '127.0.0.1');" \
          config.php ;
        # Redis session tests, but not for PHP 7.2 and up. See MDL-60978 for more info.
        redissession="define('TEST_SESSION_REDIS_HOST', '127.0.0.1');"
        sed -i \
          -e "/require_once/i \\${redissession}" \
          config.php ;

        cat config.php

        exit 1

