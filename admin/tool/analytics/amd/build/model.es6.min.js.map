{"version":3,"sources":["../src/model.js"],"names":["define","$","Str","log","Notification","ModalFactory","ModalEvents","actionsList","clear","title","key","component","body","getModelName","actionItem","closest","find","text","confirmAction","actionId","actionType","on","ev","preventDefault","a","currentTarget","error","reqStrings","param","stringsPromise","get_strings","modalPromise","create","type","types","SAVE_CANCEL","when","then","strings","modal","setTitle","setBody","setSaveButtonText","getRoot","save","window","location","href","attr","show","fail","exception"],"mappings":"AAsBAA,MAAM,wBAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,UAAvB,CAAmC,mBAAnC,CAAwD,oBAAxD,CAA8E,mBAA9E,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAiBC,CAAjB,CAAsBC,CAAtB,CAAoCC,CAApC,CAAkDC,CAAlD,CAA+D,IAK3DC,CAAAA,CAAW,CAAG,CACdC,KAAK,CAAE,CACHC,KAAK,CAAE,CACHC,GAAG,CAAE,kBADF,CAEHC,SAAS,CAAE,gBAFR,CADJ,CAIAC,IAAI,CAAE,CACLF,GAAG,CAAE,uBADA,CAELC,SAAS,CAAE,gBAFN,CAJN,CADO,CAL6C,CAwB3DE,CAAY,CAAG,SAASC,CAAT,CAAqB,CACpC,MAAOb,CAAAA,CAAC,CAACa,CAAU,CAACC,OAAX,CAAmB,IAAnB,EAAyB,CAAzB,CAAD,CAAD,CAA+BC,IAA/B,CAAoC,kBAApC,EAAwDC,IAAxD,EACV,CA1B8D,CA6B/D,MAAO,CAQHC,aAAa,CAAE,WAASC,CAAT,CAAmBC,CAAnB,CAA+B,CAC1CnB,CAAC,CAAC,qBAAsBkB,CAAtB,CAAiC,KAAlC,CAAD,CAAyCE,EAAzC,CAA4C,OAA5C,CAAqD,SAASC,CAAT,CAAa,CAC9DA,CAAE,CAACC,cAAH,GAEA,GAAIC,CAAAA,CAAC,CAAGvB,CAAC,CAACqB,CAAE,CAACG,aAAJ,CAAT,CAEA,GAAuC,WAAnC,QAAOlB,CAAAA,CAAW,CAACa,CAAD,CAAtB,CAAoD,CAChDjB,CAAG,CAACuB,KAAJ,CAAU,YAAaN,CAAb,CAA0B,oBAApC,EACA,MACH,CAED,GAAIO,CAAAA,CAAU,CAAG,CACbpB,CAAW,CAACa,CAAD,CAAX,CAAwBX,KADX,CAEbF,CAAW,CAACa,CAAD,CAAX,CAAwBR,IAFX,CAAjB,CAIAe,CAAU,CAAC,CAAD,CAAV,CAAcC,KAAd,CAAsBf,CAAY,CAACW,CAAD,CAAlC,CAd8D,GAgB1DK,CAAAA,CAAc,CAAG3B,CAAG,CAAC4B,WAAJ,CAAgBH,CAAhB,CAhByC,CAiB1DI,CAAY,CAAG1B,CAAY,CAAC2B,MAAb,CAAoB,CAACC,IAAI,CAAE5B,CAAY,CAAC6B,KAAb,CAAmBC,WAA1B,CAApB,CAjB2C,CAmB9DlC,CAAC,CAACmC,IAAF,CAAOP,CAAP,CAAuBE,CAAvB,EAAqCM,IAArC,CAA0C,SAASC,CAAT,CAAkBC,CAAlB,CAAyB,CAC/DA,CAAK,CAACC,QAAN,CAAeF,CAAO,CAAC,CAAD,CAAtB,EACAC,CAAK,CAACE,OAAN,CAAcH,CAAO,CAAC,CAAD,CAArB,EACAC,CAAK,CAACG,iBAAN,CAAwBJ,CAAO,CAAC,CAAD,CAA/B,EACAC,CAAK,CAACI,OAAN,GAAgBtB,EAAhB,CAAmBf,CAAW,CAACsC,IAA/B,CAAqC,UAAW,CAC5CC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuBvB,CAAC,CAACwB,IAAF,CAAO,MAAP,CAC1B,CAFD,EAGAT,CAAK,CAACU,IAAN,GACA,MAAOV,CAAAA,CACV,CATD,EASGW,IATH,CASQ9C,CAAY,CAAC+C,SATrB,CAUH,CA7BD,CA8BH,CAvCE,CAyCV,CAvEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for model actions confirmation.\n *\n * @module     tool_analytics/model\n * @copyright  2017 David Monllao\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/log', 'core/notification', 'core/modal_factory', 'core/modal_events'],\n    function($, Str, log, Notification, ModalFactory, ModalEvents) {\n\n    /**\n     * List of actions that require confirmation and confirmation message.\n     */\n    var actionsList = {\n        clear: {\n            title: {\n                key: 'clearpredictions',\n                component: 'tool_analytics'\n            }, body: {\n                key: 'clearmodelpredictions',\n                component: 'tool_analytics'\n            }\n\n        }\n    };\n\n    /**\n     * Returns the model name.\n     *\n     * @param {Object} actionItem The action item DOM node.\n     * @return {String}\n     */\n    var getModelName = function(actionItem) {\n        return $(actionItem.closest('tr')[0]).find('span.target-name').text();\n    };\n\n    /** @alias module:tool_analytics/model */\n    return {\n\n        /**\n         * Displays a confirm modal window before executing the action.\n         *\n         * @param {String} actionId\n         * @param {String} actionType\n         */\n        confirmAction: function(actionId, actionType) {\n            $('[data-action-id=\"' + actionId + '\"]').on('click', function(ev) {\n                ev.preventDefault();\n\n                var a = $(ev.currentTarget);\n\n                if (typeof actionsList[actionType] === \"undefined\") {\n                    log.error('Action \"' + actionType + '\" is not allowed.');\n                    return;\n                }\n\n                var reqStrings = [\n                    actionsList[actionType].title,\n                    actionsList[actionType].body\n                ];\n                reqStrings[1].param = getModelName(a);\n\n                var stringsPromise = Str.get_strings(reqStrings);\n                var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\n\n                $.when(stringsPromise, modalPromise).then(function(strings, modal) {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[0]);\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.href = a.attr('href');\n                    });\n                    modal.show();\n                    return modal;\n                }).fail(Notification.exception);\n            });\n        }\n    };\n});\n"],"file":"model.es6.min.js"}