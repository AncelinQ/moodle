{"version":3,"sources":["../src/usertours.js"],"names":["tourId","currentTour","init","tourDetails","filters","requiredModules","map","filter","Promise","all","then","allFilters","find","tourDetail","filterMatches","startTour","fetchTour","addResetLink","document","addEventListener","e","target","closest","preventDefault","resetTourState","M","util","js_pending","Ajax","call","methodname","args","tourid","context","cfg","contextid","pageurl","window","location","href","Templates","renderForPromise","tourData","html","tourconfig","startBootstrapTour","js_complete","catch","Notification","exception","js","appendNodeContents","getResetContainer","container","querySelector","getBootstrapTour","template","tourConfig","onEnd","endTour","eventHandlers","afterEnd","markTourComplete","afterRender","markStepShown","tourName","name","steps","step","element","reflex","moveOnClick","content","body","BootstrapTour","tour","stepConfig","getStepConfig","getCurrentStepNumber","stepid","stepindex","Log","error","response"],"mappings":"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","sourcesContent":["/**\n * User tour control library.\n *\n * @module     tool_usertours/usertours\n * @class      usertours\n * @package    tool_usertours\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\n\nimport Ajax from 'core/ajax';\nimport BootstrapTour from 'tool_usertours/tour';\nimport Templates from 'core/templates';\nimport Log from 'core/log';\nimport Notification from 'core/notification';\n\n/**\n * The tourId.\n */\nlet tourId = null;\n\n/**\n * The current tour details.\n */\nlet currentTour = null;\n\n/**\n * Initialise the user tour for the current page.\n *\n * @param   {Array}    tourDetails      The matching tours for this page.\n * @param   {Array}    filters          The names of all client side filters.\n * @returns {Promise}\n */\nexport const init = (tourDetails, filters) => {\n    const requiredModules = filters.map(filter => import(`tool_usertours/filter_${filter}`));\n    return Promise.all(requiredModules)\n    .then(([...allFilters]) => {\n        // Run the client side filters to find the first matching tour.\n        return tourDetails.find(tourDetail => {\n            return allFilters.find(filter => filter.filterMatches(tourDetail));\n        }, tourDetails);\n    })\n    .then(tourDetail => startTour(tourDetail));\n};\n\n/**\n * Start the tour given the provided tour configuration.\n *\n * @param   {Object} tourDetail\n */\nconst startTour = tourDetail => {\n    if (!tourDetail) {\n        return;\n    }\n\n    // Only one tour per page is allowed.\n    tourId = tourDetail.tourId;\n\n    let startTour = tourDetail.startTour;\n    if (typeof startTour === 'undefined') {\n        startTour = true;\n    }\n\n    if (startTour) {\n        // Fetch the tour configuration.\n        fetchTour(tourId);\n    }\n\n    addResetLink();\n\n    // Watch for the reset link.\n    document.addEventListener('click', e => {\n        if (e.target.closest('[data-action=\"tool_usertours/resetpagetour\"]')) {\n            e.preventDefault();\n            resetTourState(tourId);\n        }\n    });\n};\n\n/**\n * Fetch the configuration specified tour, and start the tour when it has been fetched.\n *\n * @param   {Number}    tourId      The ID of the tour to start.\n * @returns {Promise}\n */\nconst fetchTour = (tourId) => {\n    M.util.js_pending('admin_usertour_fetchTour' + tourId);\n\n    return Promise.all([\n        Ajax.call([{\n            methodname: 'tool_usertours_fetch_and_start_tour',\n            args: {\n                tourid:     tourId,\n                context:    M.cfg.contextid,\n                pageurl:    window.location.href,\n            }\n        }])[0],\n        Templates.renderForPromise('tool_usertours/tourstep', {})\n    ])\n    .then(([tourData, {html}]) => {\n        // If we don't have any tour config (because it doesn't need showing for the current user), return early.\n        if (tourData && tourData.tourconfig) {\n            startBootstrapTour(tourId, html, tourData.tourconfig);\n        }\n\n        return;\n    })\n    .then(M.util.js_complete('admin_usertour_fetchTour' + tourId))\n    .catch(Notification.exception);\n};\n\n/**\n * Add a reset link to the page.\n *\n * @returns {Promise}\n */\nconst addResetLink = () => {\n    M.util.js_pending('admin_usertour_addResetLink');\n\n    return Templates.renderForPromise('tool_usertours/resettour', {})\n    .then(({html, js}) => Templates.appendNodeContents(getResetContainer(), html, js))\n    .then(M.util.js_complete('admin_usertour_addResetLink'))\n    .catch();\n};\n\n/**\n * Get the container used for the reset link.\n *\n * @returns {HTMLElement}\n */\nconst getResetContainer = () => {\n    // Find the most suitable place on the page with fallback to legacy selectors and finally the body if there is no better place.\n    let container = document.querySelector('.tool_usertours-resettourcontainer');\n    if (container) {\n        return container;\n    }\n\n    container = document.querySelector('.logininfo');\n    if (container) {\n        return container;\n    }\n\n    container = document.querySelector('footer');\n    if (container) {\n        return container;\n    }\n\n    return document.querySelector('body');\n};\n\n/**\n * Get the BootstrapTour instance.\n *\n * @param   {Number}    tourId      The ID of the tour to start.\n * @param   {String}    template    The template to use.\n * @param   {Object}    tourConfig  The tour configuration.\n * @return  {BootstrapTour}\n */\nconst getBootstrapTour = (tourId, template, tourConfig) => {\n    if (currentTour) {\n        // End the current tour, but disable end tour handler.\n        tourConfig.onEnd = null;\n        currentTour.endTour();\n        currentTour = null;\n    }\n\n    // Normalize for the new library.\n    tourConfig.eventHandlers = {\n        afterEnd: [markTourComplete],\n        afterRender: [markStepShown],\n    };\n\n    // Sort out the tour name.\n    tourConfig.tourName = tourConfig.name;\n    delete tourConfig.name;\n\n    // Add the template to the configuration.\n    // This enables translations of the buttons.\n    tourConfig.template = template;\n\n    tourConfig.steps = tourConfig.steps.map(step => {\n        if (typeof step.element !== 'undefined') {\n            step.target = step.element;\n            delete step.element;\n        }\n\n        if (typeof step.reflex !== 'undefined') {\n            step.moveOnClick = !!step.reflex;\n            delete step.reflex;\n        }\n\n        if (typeof step.content !== 'undefined') {\n            step.body = step.content;\n            delete step.content;\n        }\n\n        return step;\n    });\n\n    return new BootstrapTour(tourConfig);\n};\n\n/**\n * Start the specified tour.\n *\n * @param   {Number}    tourId      The ID of the tour to start.\n * @param   {String}    template    The template to use.\n * @param   {Object}    tourConfig  The tour configuration.\n * @return  {Object}\n */\nconst startBootstrapTour = (tourId, template, tourConfig) => {\n    currentTour = getBootstrapTour(tourId, template, tourConfig);\n    return currentTour.startTour();\n};\n\n/**\n * Mark the specified step as being shownd by the user.\n *\n * @param   {BootstrapTour} tour\n * @returns {Promise}\n */\nconst markStepShown = tour => {\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    return Ajax.call([{\n        methodname: 'tool_usertours_step_shown',\n        args: {\n            tourid:     tourId,\n            context:    M.cfg.contextid,\n            pageurl:    window.location.href,\n            stepid:     stepConfig.stepid,\n            stepindex:  tour.getCurrentStepNumber(),\n        }\n    }])[0]\n    .catch(Log.error);\n};\n\n/**\n * Mark the specified tour as being completed by the user.\n *\n * @param   {BootstrapTour} tour\n * @returns {Promise}\n */\nconst markTourComplete = tour => {\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    return Ajax.call([{\n        methodname: 'tool_usertours_complete_tour',\n        args: {\n            tourid:     tourId,\n            context:    M.cfg.contextid,\n            pageurl:    window.location.href,\n            stepid:     stepConfig.stepid,\n            stepindex:  tour.getCurrentStepNumber(),\n        }\n    }])[0]\n    .catch(Log.error);\n};\n\n/**\n * Reset the state, and restart the the tour on the current page.\n *\n * @param   {Number}    tourId      The ID of the tour to start.\n * @returns {Promise}\n */\nexport const resetTourState = tourId => {\n    return Ajax.call([\n        {\n            methodname: 'tool_usertours_reset_tour',\n            args: {\n                tourid: tourId,\n                context: M.cfg.contextid,\n                pageurl: window.location.href,\n            }\n        }\n    ])[0]\n    .then(response => {\n        if (response.startTour) {\n            fetchTour(response.startTour);\n        }\n        return;\n    })\n    .catch(Notification.exception);\n};\n"],"file":"usertours.min.js"}