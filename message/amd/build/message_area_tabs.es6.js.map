{"version":3,"sources":["../src/message_area_tabs.js"],"names":["define","CustomEvents","Events","SELECTORS","ACTIVECONTACTSTAB","CONTACTSPANELS","VIEWCONTACTS","VIEWCONVERSATIONS","Tabs","messageArea","_init","prototype","node","events","activate","up","down","next","previous","ctrlPageUp","ctrlPageDown","onDelegateEvent","_viewConversations","bind","_viewContacts","_toggleTabs","onCustomEvent","MESSAGESENT","_selectTab","trigger","CONVERSATIONSSELECTED","CONTACTSSELECTED","tabselect","tabdeselect","find","removeClass","attr","addClass","e","data","activeTab","is","focus","preventDefault","stopPropagation","originalEvent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles the tabs of the messaging area.\n *\n * @module     core_message/message_area_tabs\n * @package    core_message\n * @copyright  2016 Mark Nelson <markn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/custom_interaction_events', 'core_message/message_area_events'], function(CustomEvents, Events) {\n\n    /** @type {Object} The list of selectors for the message area. */\n    var SELECTORS = {\n        ACTIVECONTACTSTAB: \"[data-region='contacts-area'] [role='tab'][aria-selected='true']\",\n        CONTACTSPANELS: \"[data-region='contacts']\",\n        VIEWCONTACTS: \"[data-action='contacts-view']\",\n        VIEWCONVERSATIONS: \"[data-action='conversations-view']\"\n    };\n\n    /**\n     * Tabs class.\n     *\n     * @param {Messagearea} messageArea The messaging area object.\n     */\n    function Tabs(messageArea) {\n        this.messageArea = messageArea;\n        this._init();\n    }\n\n    /** @type {Messagearea} The messaging area object. */\n    Tabs.prototype.messageArea = null;\n\n    /**\n     * Initialise the event listeners.\n     *\n     * @private\n     */\n    Tabs.prototype._init = function() {\n        CustomEvents.define(this.messageArea.node, [\n            CustomEvents.events.activate,\n            CustomEvents.events.up,\n            CustomEvents.events.down,\n            CustomEvents.events.next,\n            CustomEvents.events.previous,\n            CustomEvents.events.ctrlPageUp,\n            CustomEvents.events.ctrlPageDown,\n        ]);\n\n        this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWCONVERSATIONS,\n                this._viewConversations.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.activate, SELECTORS.VIEWCONTACTS,\n                this._viewContacts.bind(this));\n\n        // Change to the other tab if any arrow keys are pressed, since there are only two tabs.\n        this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.next, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.previous, SELECTORS.VIEWCONVERSATIONS,\n                this._toggleTabs.bind(this));\n        // Change to the other tab if any arrow keys are pressed, since there are only two tabs.\n        this.messageArea.onDelegateEvent(CustomEvents.events.up, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.down, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.next, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.previous, SELECTORS.VIEWCONTACTS,\n                this._toggleTabs.bind(this));\n        // Tab panel keyboard handling.\n        this.messageArea.onDelegateEvent(CustomEvents.events.ctrlPageUp, SELECTORS.CONTACTSPANELS,\n                this._toggleTabs.bind(this));\n        this.messageArea.onDelegateEvent(CustomEvents.events.ctrlPageDown, SELECTORS.CONTACTSPANELS,\n                this._toggleTabs.bind(this));\n\n        this.messageArea.onCustomEvent(Events.MESSAGESENT, function() {\n            this._selectTab(SELECTORS.VIEWCONVERSATIONS, SELECTORS.VIEWCONTACTS);\n        }.bind(this));\n    };\n\n    /**\n     * Handles when the conversation tab is selected.\n     *\n     * @private\n     */\n    Tabs.prototype._viewConversations = function() {\n        this.messageArea.trigger(Events.CONVERSATIONSSELECTED);\n        this._selectTab(SELECTORS.VIEWCONVERSATIONS, SELECTORS.VIEWCONTACTS);\n    };\n\n    /**\n     * Handles when the contacts tab is selected.\n     *\n     * @private\n     */\n    Tabs.prototype._viewContacts = function() {\n        this.messageArea.trigger(Events.CONTACTSSELECTED);\n        this._selectTab(SELECTORS.VIEWCONTACTS, SELECTORS.VIEWCONVERSATIONS);\n    };\n\n    /**\n     * Sets a tab to selected.\n     *\n     * @param {String} tabselect The name of the tab to select\n     * @param {String} tabdeselect The name of the tab to deselect\n     * @private\n     */\n    Tabs.prototype._selectTab = function(tabselect, tabdeselect) {\n        tabdeselect = this.messageArea.find(tabdeselect);\n        tabdeselect.removeClass('selected');\n        tabdeselect.attr('aria-selected', 'false');\n        tabdeselect.attr('tabindex', '-1');\n\n        tabselect = this.messageArea.find(tabselect);\n        tabselect.addClass('selected');\n        tabselect.attr('aria-selected', 'true');\n        tabselect.attr('tabindex', '0');\n    };\n\n    /**\n     * Change to the inactive tab.\n     *\n     * @param {event} e The javascript event\n     * @param {object} data The additional event data\n     * @private\n     */\n    Tabs.prototype._toggleTabs = function(e, data) {\n        var activeTab = this.messageArea.find(SELECTORS.ACTIVECONTACTSTAB);\n\n        if (activeTab.is(SELECTORS.VIEWCONVERSATIONS)) {\n            this._viewContacts();\n        } else {\n            this._viewConversations();\n        }\n\n        this.messageArea.find(SELECTORS.ACTIVECONTACTSTAB).focus();\n\n        e.preventDefault();\n        e.stopPropagation();\n        data.originalEvent.preventDefault();\n        data.originalEvent.stopPropagation();\n    };\n\n    return Tabs;\n});\n"],"file":"message_area_tabs.es6.js"}