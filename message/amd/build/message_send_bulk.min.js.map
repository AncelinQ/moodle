{"version":3,"sources":["../src/message_send_bulk.js"],"names":["showModal","users","callback","length","$","Deferred","resolve","promise","titlePromise","Str","get_string","when","ModalFactory","create","type","types","SAVE_CANCEL","body","Templates","render","then","modal","title","setTitle","setSaveButtonText","getRoot","on","ModalEvents","hidden","remove","save","messageText","find","val","sendMessage","show","messages","i","push","touserid","text","Ajax","call","methodname","args","messageIds","msg","Notification","addNotification","message","catch","exception"],"mappings":"4RAsBA,OACA,kUACA,OACA,OACA,OACA,OACA,O,mDAUO,GAAMA,CAAAA,CAAS,CAAG,SAACC,CAAD,CAA4B,IAApBC,CAAAA,CAAoB,wDAAT,IAAS,CACjD,GAAoB,CAAhB,EAAAD,CAAK,CAACE,MAAV,CAAuB,CAEnB,MAAOC,WAAEC,QAAF,GAAaC,OAAb,GAAuBC,OAAvB,EACV,CACD,GAAIC,CAAAA,CAAY,CAAG,IAAnB,CACA,GAAoB,CAAhB,EAAAP,CAAK,CAACE,MAAV,CAAuB,CACnBK,CAAY,CAAGC,CAAG,CAACC,UAAJ,CAAe,uBAAf,CAAwC,cAAxC,CAClB,CAFD,IAEO,CACHF,CAAY,CAAGC,CAAG,CAACC,UAAJ,CAAe,iBAAf,CAAkC,cAAlC,CAAkDT,CAAK,CAACE,MAAxD,CAClB,CAED,MAAOC,WAAEO,IAAF,CACHC,UAAaC,MAAb,CAAoB,CAChBC,IAAI,CAAEF,UAAaG,KAAb,CAAmBC,WADT,CAEhBC,IAAI,CAAEC,UAAUC,MAAV,CAAiB,6BAAjB,CAAgD,EAAhD,CAFU,CAApB,CADG,CAKHX,CALG,EAMLY,IANK,CAMA,SAASC,CAAT,CAAgBC,CAAhB,CAAuB,CAC1BD,CAAK,CAACE,QAAN,CAAeD,CAAf,EACAD,CAAK,CAACG,iBAAN,CAAwBF,CAAxB,EAGAD,CAAK,CAACI,OAAN,GAAgBC,EAAhB,CAAmBC,UAAYC,MAA/B,CAAuC,UAAW,CAC9C,GAAI1B,CAAJ,CAAc,CACVA,CAAQ,EACX,CACDmB,CAAK,CAACI,OAAN,GAAgBI,MAAhB,EACH,CALD,EAOAR,CAAK,CAACI,OAAN,GAAgBC,EAAhB,CAAmBC,UAAYG,IAA/B,CAAqC,UAAW,CAC5C,GAAIC,CAAAA,CAAW,CAAGV,CAAK,CAACI,OAAN,GAAgBO,IAAhB,CAAqB,eAArB,EAAsCC,GAAtC,EAAlB,CACAC,CAAW,CAACH,CAAD,CAAc9B,CAAd,CACd,CAHD,EAKAoB,CAAK,CAACc,IAAN,GAEA,MAAOd,CAAAA,CACV,CA1BM,CA2BV,CAvCM,C,cAiDA,GAAMa,CAAAA,CAAW,CAAG,SAACH,CAAD,CAAc9B,CAAd,CAAwB,CAC/C,GAAImC,CAAAA,CAAQ,CAAG,EAAf,CACIC,CAAC,CAAG,CADR,CAGA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpC,CAAK,CAACE,MAAtB,CAA8BkC,CAAC,EAA/B,CAAmC,CAC/BD,CAAQ,CAACE,IAAT,CAAc,CAACC,QAAQ,CAAEtC,CAAK,CAACoC,CAAD,CAAhB,CAAqBG,IAAI,CAAET,CAA3B,CAAd,CACH,CAED,MAAOU,WAAKC,IAAL,CAAU,CAAC,CACdC,UAAU,CAAE,oCADE,CAEdC,IAAI,CAAE,CAACR,QAAQ,CAAEA,CAAX,CAFQ,CAAD,CAAV,EAGH,CAHG,EAGAhB,IAHA,CAGK,SAASyB,CAAT,CAAqB,CAC7B,GAAyB,CAArB,EAAAA,CAAU,CAAC1C,MAAf,CAA4B,CACxB,MAAOM,CAAAA,CAAG,CAACC,UAAJ,CAAe,2BAAf,CAA4C,cAA5C,CACV,CAFD,IAEO,CACH,MAAOD,CAAAA,CAAG,CAACC,UAAJ,CAAe,qBAAf,CAAsC,cAAtC,CAAsDmC,CAAU,CAAC1C,MAAjE,CACV,CACJ,CATM,EASJiB,IATI,CASC,SAAS0B,CAAT,CAAc,CAClBC,UAAaC,eAAb,CAA6B,CACzBC,OAAO,CAAEH,CADgB,CAEzBhC,IAAI,CAAE,SAFmB,CAA7B,EAIA,QACH,CAfM,EAeJoC,KAfI,CAeEH,UAAaI,SAff,CAgBV,CAxBM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Send bulk message to the given user ids.\n *\n * @module     core_message/message_send_bulk\n * @copyright  2019 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Show the send message popup.\n *\n * @method showModal\n * @param {int[]} users\n * @param {Function} callback A callback to apply after the form is closed.\n * @returns {Promise}\n */\nexport const showModal = (users, callback = null) => {\n    if (users.length == 0) {\n        // Nothing to do.\n        return $.Deferred().resolve().promise();\n    }\n    let titlePromise = null;\n    if (users.length == 1) {\n        titlePromise = Str.get_string('sendbulkmessagesingle', 'core_message');\n    } else {\n        titlePromise = Str.get_string('sendbulkmessage', 'core_message', users.length);\n    }\n\n    return $.when(\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            body: Templates.render('core_user/send_bulk_message', {})\n        }),\n        titlePromise\n    ).then(function(modal, title) {\n        modal.setTitle(title);\n        modal.setSaveButtonText(title);\n\n        // We want to focus on the action select when the dialog is closed.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            if (callback) {\n                callback();\n            }\n            modal.getRoot().remove();\n        });\n\n        modal.getRoot().on(ModalEvents.save, function() {\n            let messageText = modal.getRoot().find('form textarea').val();\n            sendMessage(messageText, users);\n        });\n\n        modal.show();\n\n        return modal;\n    });\n};\n\n/**\n * Send a message to these users.\n *\n * @method sendMessage\n * @param {String} messageText\n * @param {int[]} users\n * @returns {*}\n */\nexport const sendMessage = (messageText, users) => {\n    let messages = [],\n        i = 0;\n\n    for (i = 0; i < users.length; i++) {\n        messages.push({touserid: users[i], text: messageText});\n    }\n\n    return Ajax.call([{\n        methodname: 'core_message_send_instant_messages',\n        args: {messages: messages}\n    }])[0].then(function(messageIds) {\n        if (messageIds.length == 1) {\n            return Str.get_string('sendbulkmessagesentsingle', 'core_message');\n        } else {\n            return Str.get_string('sendbulkmessagesent', 'core_message', messageIds.length);\n        }\n    }).then(function(msg) {\n        Notification.addNotification({\n            message: msg,\n            type: \"success\"\n        });\n        return true;\n    }).catch(Notification.exception);\n};"],"file":"message_send_bulk.min.js"}