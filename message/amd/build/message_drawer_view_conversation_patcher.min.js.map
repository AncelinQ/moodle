{"version":3,"sources":["../src/message_drawer_view_conversation_patcher.js"],"names":["define","$","UserDate","Constants","sortMessagesByDay","messages","midnight","messagesByDay","reduce","carry","message","dayTimestamp","getUserMidnightForTimestamp","timeCreated","hasOwnProperty","push","Object","keys","map","timestamp","diffArrays","a","b","matchFunction","slice","missingFromA","missingFromB","matches","forEach","current","found","index","length","next","splice","findPositionInArray","array","breakFunction","before","i","candidate","isArrayEqual","sort","aLength","bLength","every","item","buildDaysPatch","daysDiff","remove","add","day","value","buildMessagesPatch","matchingDays","days","dayCurrent","dayNext","messagesDiff","messageCurrent","messageNext","id","concat","buildConversationPatch","state","newState","oldMessageIds","newMessageIds","buildHeaderPatchTypePrivate","requireAddContact","buildRequireAddContact","confirmContactRequest","buildConfirmContactRequest","oldOtherUser","getOtherUserFromState","newOtherUser","requiresAddContact","show","hasMessages","requiredAddContact","shouldRenderHeader","type","CONVERSATION_TYPES","PRIVATE","showControls","context","name","subname","totalmembercount","totalMemberCount","imageurl","imageUrl","isfavourite","isFavourite","showfavourite","userid","showonlinestatus","isonline","isblocked","iscontact","buildHeaderPatchTypePublic","oldMemberCount","newMemberCount","PUBLIC","buildScrollToMessagePatch","oldMessages","newMessages","previousNewest","currentNewest","previousOldest","currentOldest","buildLoadingMembersPatch","loadingMembers","buildLoadingFirstMessages","hasTriedToLoadMessages","loadingMessages","buildLoadingMessages","buildSendingMessage","sendingMessage","buildConfirmBlockUser","pendingBlockUserIds","userId","members","buildConfirmUnblockUser","pendingUnblockUserIds","buildConfirmAddContact","pendingAddContactIds","buildConfirmRemoveContact","pendingRemoveContactIds","buildConfirmDeleteSelectedMessages","pendingDeleteMessageIds","buildConfirmDeleteConversation","pendingDeleteConversation","loggedInUserId","oldReceivedRequests","contactrequests","filter","request","requesteduserid","newReceivedRequests","oldRequest","newRequest","buildIsBlocked","buildIsFavourite","oldIsFavourite","newIsFavourite","buildIsContact","oldContactRequests","newContactRequests","oldHasContactRequests","newHasContactRequests","buildLoadingConfirmationAction","loadingConfirmAction","buildInEditMode","oldHasSelectedMessages","selectedMessageIds","newHasSelectedMessages","numberOfMessagesHasChanged","buildSelectedMessages","oldSelectedMessages","newSelectedMessages","diff","count","requiresContactRequest","user","contactRequests","hasSentContactRequest","requirescontact","hadMessages","prevRequiresContactRequest","nextRequiresContactRequest","confirmAddContact","buildRequireUnblock","buildUnableToMessage","canmessage","buildFooterPatchTypePrivate","loadingFirstMessages","inEditMode","requireUnblock","unableToMessage","showRequireAddContact","otherUser","generateReturnValue","checkValue","successReturn","checks","result","buildFooterPatchTypePublic","buildReset","oldType","newType","oldConversationId","newConversationId","oldMemberIds","newMemberIds","membersUnchanged","buildContactRequestSent","oldSentRequests","newSentRequests","fullname","buildPatch","config","all","reset","conversation","scrollToMessage","confirmDeleteSelectedMessages","selectedMessages","header","footer","confirmBlockUser","confirmUnblockUser","confirmRemoveContact","confirmDeleteConversation","isBlocked","isContact","contactRequestSent","patchConfig","extend","patch","key","buildFunc"],"mappings":"AA2BAA,MAAM,yDACN,CACI,QADJ,CAEI,gBAFJ,CAGI,yDAHJ,CADM,CAMN,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIE,IAQMC,CAAAA,CAAiB,CAAG,SAASC,CAAT,CAAmBC,CAAnB,CAA6B,CACjD,GAAIC,CAAAA,CAAa,CAAGF,CAAQ,CAACG,MAAT,CAAgB,SAASC,CAAT,CAAgBC,CAAhB,CAAyB,CACzD,GAAIC,CAAAA,CAAY,CAAGT,CAAQ,CAACU,2BAAT,CAAqCF,CAAO,CAACG,WAA7C,CAA0DP,CAA1D,CAAnB,CAEA,GAAIG,CAAK,CAACK,cAAN,CAAqBH,CAArB,CAAJ,CAAwC,CACpCF,CAAK,CAACE,CAAD,CAAL,CAAoBI,IAApB,CAAyBL,CAAzB,CACH,CAFD,IAEO,CACHD,CAAK,CAACE,CAAD,CAAL,CAAsB,CAACD,CAAD,CACzB,CAED,MAAOD,CAAAA,CACV,CAVmB,CAUjB,EAViB,CAApB,CAYA,MAAOO,CAAAA,MAAM,CAACC,IAAP,CAAYV,CAAZ,EAA2BW,GAA3B,CAA+B,SAASP,CAAT,CAAuB,CACzD,MAAO,CACHQ,SAAS,CAAER,CADR,CAEHN,QAAQ,CAAEE,CAAa,CAACI,CAAD,CAFpB,CAIV,CALM,CAMV,CA3BH,CAsCMS,CAAU,CAAG,SAASC,CAAT,CAAYC,CAAZ,CAAeC,CAAf,CAA8B,CAE3CD,CAAC,CAAGA,CAAC,CAACE,KAAF,EAAJ,CAF2C,GAGvCC,CAAAA,CAAY,CAAG,EAHwB,CAIvCC,CAAY,CAAG,EAJwB,CAKvCC,CAAO,CAAG,EAL6B,CAO3CN,CAAC,CAACO,OAAF,CAAU,SAASC,CAAT,CAAkB,IACpBC,CAAAA,CAAK,GADe,CAEpBC,CAAK,CAAG,CAFY,CAIxB,KAAOA,CAAK,CAAGT,CAAC,CAACU,MAAjB,CAAyBD,CAAK,EAA9B,CAAkC,CAC9B,GAAIE,CAAAA,CAAI,CAAGX,CAAC,CAACS,CAAD,CAAZ,CAEA,GAAIR,CAAa,CAACM,CAAD,CAAUI,CAAV,CAAjB,CAAkC,CAC9BH,CAAK,GAAL,CACAH,CAAO,CAACZ,IAAR,CAAa,CACTM,CAAC,CAAEQ,CADM,CAETP,CAAC,CAAEW,CAFM,CAAb,EAIA,KACH,CACJ,CAED,GAAIH,CAAJ,CAAW,CAEPR,CAAC,CAACY,MAAF,CAASH,CAAT,CAAgB,CAAhB,CACH,CAHD,IAGO,CAGHL,CAAY,CAACX,IAAb,CAAkBc,CAAlB,CACH,CACJ,CAzBD,EA2BAJ,CAAY,CAAGH,CAAf,CAEA,MAAO,CACHG,YAAY,CAAEA,CADX,CAEHC,YAAY,CAAEA,CAFX,CAGHC,OAAO,CAAEA,CAHN,CAKV,CA/EH,CAwFMQ,CAAmB,CAAG,SAASC,CAAT,CAAgBC,CAAhB,CAA+B,CAGrD,OAFIC,CAAAA,CAAM,CAAG,IAEb,CAASC,CAAC,CAAG,CAAb,CACQC,CADR,CAAgBD,CAAC,CAAGH,CAAK,CAACJ,MAA1B,CAAkCO,CAAC,EAAnC,CAAuC,CAC/BC,CAD+B,CACnBJ,CAAK,CAACG,CAAD,CADc,CAGnC,GAAIF,CAAa,CAACG,CAAD,CAAjB,CAA8B,CAC1B,MAAOA,CAAAA,CACV,CACJ,CAED,MAAOF,CAAAA,CACV,CApGH,CA6GMG,CAAY,CAAG,SAASpB,CAAT,CAAYC,CAAZ,CAAe,CAC9BD,CAAC,CAACqB,IAAF,GACApB,CAAC,CAACoB,IAAF,GAF8B,GAG1BC,CAAAA,CAAO,CAAGtB,CAAC,CAACW,MAHc,CAI1BY,CAAO,CAAGtB,CAAC,CAACU,MAJc,CAM9B,GAAc,CAAV,CAAAW,CAAO,EAAkB,CAAV,CAAAC,CAAnB,CAAgC,CAC5B,QACH,CAED,GAAID,CAAO,EAAIC,CAAf,CAAwB,CACpB,QACH,CAED,MAAOvB,CAAAA,CAAC,CAACwB,KAAF,CAAQ,SAASC,CAAT,CAAef,CAAf,CAAsB,CACjC,MAAOe,CAAAA,CAAI,EAAIxB,CAAC,CAACS,CAAD,CACnB,CAFM,CAGV,CA9HH,CAuIMgB,CAAc,CAAG,SAASlB,CAAT,CAAkBmB,CAAlB,CAA4B,CAC7C,MAAO,CACHC,MAAM,CAAED,CAAQ,CAACtB,YADd,CAEHwB,GAAG,CAAEF,CAAQ,CAACvB,YAAT,CAAsBP,GAAtB,CAA0B,SAASiC,CAAT,CAAc,CAGzC,GAAIb,CAAAA,CAAM,CAAGH,CAAmB,CAACN,CAAD,CAAU,SAASW,CAAT,CAAoB,CAC1D,MAAOW,CAAAA,CAAG,CAAChC,SAAJ,CAAgBqB,CAAS,CAACrB,SACpC,CAF+B,CAAhC,CAIA,MAAO,CACHmB,MAAM,CAAEA,CADL,CAEHc,KAAK,CAAED,CAFJ,CAIV,CAXI,CAFF,CAeV,CAvJH,CA+JME,CAAkB,CAAG,SAASC,CAAT,CAAuB,IACxCL,CAAAA,CAAM,CAAG,EAD+B,CAExCC,CAAG,CAAG,EAFkC,CAI5CI,CAAY,CAAC1B,OAAb,CAAqB,SAAS2B,CAAT,CAAe,IAC5BC,CAAAA,CAAU,CAAGD,CAAI,CAAClC,CADU,CAE5BoC,CAAO,CAAGF,CAAI,CAACjC,CAFa,CAG5BoC,CAAY,CAAGtC,CAAU,CAACoC,CAAU,CAACnD,QAAZ,CAAsBoD,CAAO,CAACpD,QAA9B,CAAwC,SAASsD,CAAT,CAAyBC,CAAzB,CAAsC,CACvG,MAAOD,CAAAA,CAAc,CAACE,EAAf,EAAqBD,CAAW,CAACC,EAC3C,CAF4B,CAHG,CAOhCZ,CAAM,CAAGA,CAAM,CAACa,MAAP,CAAcJ,CAAY,CAAChC,YAA3B,CAAT,CAEAgC,CAAY,CAACjC,YAAb,CAA0BG,OAA1B,CAAkC,SAASlB,CAAT,CAAkB,CAChD,GAAI4B,CAAAA,CAAM,CAAGH,CAAmB,CAACqB,CAAU,CAACnD,QAAZ,CAAsB,SAASmC,CAAT,CAAoB,CACtE,GAAI9B,CAAO,CAACG,WAAR,EAAuB2B,CAAS,CAAC3B,WAArC,CAAkD,CAC9C,MAAOH,CAAAA,CAAO,CAACmD,EAAR,CAAarB,CAAS,CAACqB,EACjC,CAFD,IAEO,CACH,MAAOnD,CAAAA,CAAO,CAACG,WAAR,CAAsB2B,CAAS,CAAC3B,WAC1C,CACJ,CAN+B,CAAhC,CAQAqC,CAAG,CAACnC,IAAJ,CAAS,CACLuB,MAAM,CAAEA,CADH,CAELc,KAAK,CAAE1C,CAFF,CAGLyC,GAAG,CAAEK,CAHA,CAAT,CAKH,CAdD,CAeH,CAxBD,EA0BA,MAAO,CACHN,GAAG,CAAEA,CADF,CAEHD,MAAM,CAAEA,CAFL,CAIV,CAjMH,CA0MMc,CAAsB,CAAG,SAASC,CAAT,CAAgBC,CAAhB,CAA0B,IAC/CC,CAAAA,CAAa,CAAGF,CAAK,CAAC3D,QAAN,CAAea,GAAf,CAAmB,SAASR,CAAT,CAAkB,CACrD,MAAOA,CAAAA,CAAO,CAACmD,EAClB,CAFmB,CAD+B,CAI/CM,CAAa,CAAGF,CAAQ,CAAC5D,QAAT,CAAkBa,GAAlB,CAAsB,SAASR,CAAT,CAAkB,CACxD,MAAOA,CAAAA,CAAO,CAACmD,EAClB,CAFmB,CAJ+B,CAQnD,GAAI,CAACpB,CAAY,CAACyB,CAAD,CAAgBC,CAAhB,CAAjB,CAAiD,IACzCtC,CAAAA,CAAO,CAAGzB,CAAiB,CAAC4D,CAAK,CAAC3D,QAAP,CAAiB2D,CAAK,CAAC1D,QAAvB,CADc,CAEzC2B,CAAI,CAAG7B,CAAiB,CAAC6D,CAAQ,CAAC5D,QAAV,CAAoB4D,CAAQ,CAAC3D,QAA7B,CAFiB,CAGzC0C,CAAQ,CAAG5B,CAAU,CAACS,CAAD,CAAUI,CAAV,CAAgB,SAASuB,CAAT,CAAqBC,CAArB,CAA8B,CACnE,MAAOD,CAAAA,CAAU,CAACrC,SAAX,EAAwBsC,CAAO,CAACtC,SAC1C,CAFwB,CAHoB,CAO7C,MAAO,CACHoC,IAAI,CAAER,CAAc,CAAClB,CAAD,CAAUmB,CAAV,CADjB,CAEH3C,QAAQ,CAAEgD,CAAkB,CAACL,CAAQ,CAACrB,OAAV,CAFzB,CAIV,CAXD,IAWO,CACH,MAAO,KACV,CACJ,CAhOH,CA0OMyC,CAA2B,CAAG,SAASJ,CAAT,CAAgBC,CAAhB,CAA0B,IACpDI,CAAAA,CAAiB,CAAGC,CAAsB,CAACN,CAAD,CAAQC,CAAR,CADU,CAEpDM,CAAqB,CAAGC,CAA0B,CAACR,CAAD,CAAQC,CAAR,CAFE,CAGpDQ,CAAY,CAAGC,CAAqB,CAACV,CAAD,CAHgB,CAIpDW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAJgB,CAKpDW,CAAkB,CAAGP,CAAiB,EAAIA,CAAiB,CAACQ,IAAvC,EAA+C,CAACR,CAAiB,CAACS,WALnC,CAMpDC,CAAkB,CAAGV,CAAiB,EAAI,CAACA,CAAiB,CAACQ,IANT,CAQpDG,CAAkB,CAAG,CAACP,CAAD,EAAiBE,CARc,CAWxDK,CAAkB,CAAGA,CAAkB,EAAIJ,CAAtB,EAA4CG,CAAjE,CAGAC,CAAkB,CAAGA,CAAkB,EAA8B,IAA1B,GAAAT,CAA3C,CAEA,GAAIS,CAAJ,CAAwB,CACpB,MAAO,CACHC,IAAI,CAAE9E,CAAS,CAAC+E,kBAAV,CAA6BC,OADhC,CAIHC,YAAY,CAAE,CAACR,CAAD,EAAuB,CAACL,CAJnC,CAKHc,OAAO,CAAE,CACLxB,EAAE,CAAEI,CAAQ,CAACJ,EADR,CAELyB,IAAI,CAAErB,CAAQ,CAACqB,IAFV,CAGLC,OAAO,CAAEtB,CAAQ,CAACsB,OAHb,CAILC,gBAAgB,CAAEvB,CAAQ,CAACwB,gBAJtB,CAKLC,QAAQ,CAAEzB,CAAQ,CAAC0B,QALd,CAMLC,WAAW,CAAE3B,CAAQ,CAAC4B,WANjB,CAQLC,aAAa,CAAkB,IAAhB,GAAA7B,CAAQ,CAACJ,EARnB,CASLkC,MAAM,CAAEpB,CAAY,CAACd,EAThB,CAULmC,gBAAgB,CAAErB,CAAY,CAACqB,gBAV1B,CAWLC,QAAQ,CAAEtB,CAAY,CAACsB,QAXlB,CAYLC,SAAS,CAAEvB,CAAY,CAACuB,SAZnB,CAaLC,SAAS,CAAExB,CAAY,CAACwB,SAbnB,CALN,CAqBV,CAED,MAAO,KACV,CAnRH,CA8RMC,CAA0B,CAAG,SAASpC,CAAT,CAAgBC,CAAhB,CAA0B,IACnDoC,CAAAA,CAAc,CAAGrC,CAAK,CAACyB,gBAD4B,CAEnDa,CAAc,CAAGrC,CAAQ,CAACwB,gBAFyB,CAIvD,GAAIY,CAAc,EAAIC,CAAtB,CAAsC,CAClC,MAAO,CACHrB,IAAI,CAAE9E,CAAS,CAAC+E,kBAAV,CAA6BqB,MADhC,CAEHnB,YAAY,GAFT,CAGHC,OAAO,CAAE,CACLxB,EAAE,CAAEI,CAAQ,CAACJ,EADR,CAELyB,IAAI,CAAErB,CAAQ,CAACqB,IAFV,CAGLC,OAAO,CAAEtB,CAAQ,CAACsB,OAHb,CAILC,gBAAgB,CAAEvB,CAAQ,CAACwB,gBAJtB,CAKLC,QAAQ,CAAEzB,CAAQ,CAAC0B,QALd,CAMLC,WAAW,CAAE3B,CAAQ,CAAC4B,WANjB,CAQLC,aAAa,CAAkB,IAAhB,GAAA7B,CAAQ,CAACJ,EARnB,CAHN,CAcV,CAfD,IAeO,CACH,MAAO,KACV,CACJ,CApTH,CA6TM2C,CAAyB,CAAG,SAASxC,CAAT,CAAgBC,CAAhB,CAA0B,IAClDwC,CAAAA,CAAW,CAAGzC,CAAK,CAAC3D,QAD8B,CAElDqG,CAAW,CAAGzC,CAAQ,CAAC5D,QAF2B,CAItD,GAAyB,CAArB,CAAAqG,CAAW,CAAC1E,MAAhB,CAA4B,CACxB,MAAO,KACV,CAED,GAAyB,CAArB,CAAAyE,CAAW,CAACzE,MAAhB,CAA4B,CACxB,MAAO0E,CAAAA,CAAW,CAACA,CAAW,CAAC1E,MAAZ,CAAqB,CAAtB,CAAX,CAAoC6B,EAC9C,CAVqD,GAYlD8C,CAAAA,CAAc,CAAGF,CAAW,CAACzC,CAAK,CAAC3D,QAAN,CAAe2B,MAAf,CAAwB,CAAzB,CAZsB,CAalD4E,CAAa,CAAGF,CAAW,CAACA,CAAW,CAAC1E,MAAZ,CAAqB,CAAtB,CAbuB,CAclD6E,CAAc,CAAGJ,CAAW,CAAC,CAAD,CAdsB,CAelDK,CAAa,CAAGJ,CAAW,CAAC,CAAD,CAfuB,CAiBtD,GAAIC,CAAc,CAAC9C,EAAf,EAAqB+C,CAAa,CAAC/C,EAAvC,CAA2C,CACvC,MAAO+C,CAAAA,CAAa,CAAC/C,EACxB,CAFD,IAEO,IAAIgD,CAAc,CAAChD,EAAf,EAAqBiD,CAAa,CAACjD,EAAvC,CAA2C,CAC9C,MAAOgD,CAAAA,CAAc,CAAChD,EACzB,CAED,MAAO,KACV,CArVH,CA8VMkD,CAAwB,CAAG,SAAS/C,CAAT,CAAgBC,CAAhB,CAA0B,CACrD,GAAI,CAACD,CAAK,CAACgD,cAAP,EAAyB/C,CAAQ,CAAC+C,cAAtC,CAAsD,CAClD,QACH,CAFD,IAEO,IAAIhD,CAAK,CAACgD,cAAN,EAAwB,CAAC/C,CAAQ,CAAC+C,cAAtC,CAAsD,CACzD,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAtWH,CA+WMC,CAAyB,CAAG,SAASjD,CAAT,CAAgBC,CAAhB,CAA0B,CACtD,GAAID,CAAK,CAACkD,sBAAN,GAAiCjD,CAAQ,CAACiD,sBAA9C,CAAsE,CAClE,MAAO,KACV,CAFD,IAEO,IAAI,CAACjD,CAAQ,CAACiD,sBAAV,EAAoCjD,CAAQ,CAACkD,eAAjD,CAAkE,CACrE,QACH,CAFM,IAEA,IAAIlD,CAAQ,CAACiD,sBAAT,EAAmC,CAACjD,CAAQ,CAACkD,eAAjD,CAAkE,CACrE,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAzXH,CAkYMC,CAAoB,CAAG,SAASpD,CAAT,CAAgBC,CAAhB,CAA0B,CACjD,GAAI,CAACD,CAAK,CAACmD,eAAP,EAA0BlD,CAAQ,CAACkD,eAAvC,CAAwD,CACpD,QACH,CAFD,IAEO,IAAInD,CAAK,CAACmD,eAAN,EAAyB,CAAClD,CAAQ,CAACkD,eAAvC,CAAwD,CAC3D,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CA1YH,CAmZME,CAAmB,CAAG,SAASrD,CAAT,CAAgBC,CAAhB,CAA0B,CAChD,GAAI,CAACD,CAAK,CAACsD,cAAP,EAAyBrD,CAAQ,CAACqD,cAAtC,CAAsD,CAClD,QACH,CAFD,IAEO,IAAItD,CAAK,CAACsD,cAAN,EAAwB,CAACrD,CAAQ,CAACqD,cAAtC,CAAsD,CACzD,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CA3ZH,CAoaMC,CAAqB,CAAG,SAASvD,CAAT,CAAgBC,CAAhB,CAA0B,CAClD,GAAIA,CAAQ,CAACuD,mBAAT,CAA6BxF,MAAjC,CAAyC,CAErC,GAAIyF,CAAAA,CAAM,CAAGxD,CAAQ,CAACuD,mBAAT,CAA6B,CAA7B,CAAb,CACA,MAAOvD,CAAAA,CAAQ,CAACyD,OAAT,CAAiBD,CAAjB,CACV,CAJD,IAIO,IAAIzD,CAAK,CAACwD,mBAAN,CAA0BxF,MAA9B,CAAsC,CACzC,QACH,CAED,MAAO,KACV,CA9aH,CAubM2F,CAAuB,CAAG,SAAS3D,CAAT,CAAgBC,CAAhB,CAA0B,CACpD,GAAIA,CAAQ,CAAC2D,qBAAT,CAA+B5F,MAAnC,CAA2C,CAEvC,GAAIyF,CAAAA,CAAM,CAAGxD,CAAQ,CAAC2D,qBAAT,CAA+B,CAA/B,CAAb,CACA,MAAO3D,CAAAA,CAAQ,CAACyD,OAAT,CAAiBD,CAAjB,CACV,CAJD,IAIO,IAAIzD,CAAK,CAAC4D,qBAAN,CAA4B5F,MAAhC,CAAwC,CAC3C,QACH,CAED,MAAO,KACV,CAjcH,CA0cM6F,CAAsB,CAAG,SAAS7D,CAAT,CAAgBC,CAAhB,CAA0B,CACnD,GAAIA,CAAQ,CAAC6D,oBAAT,CAA8B9F,MAAlC,CAA0C,CAEtC,GAAIyF,CAAAA,CAAM,CAAGxD,CAAQ,CAAC6D,oBAAT,CAA8B,CAA9B,CAAb,CACA,MAAO7D,CAAAA,CAAQ,CAACyD,OAAT,CAAiBD,CAAjB,CACV,CAJD,IAIO,IAAIzD,CAAK,CAAC8D,oBAAN,CAA2B9F,MAA/B,CAAuC,CAC1C,QACH,CAED,MAAO,KACV,CApdH,CA6dM+F,CAAyB,CAAG,SAAS/D,CAAT,CAAgBC,CAAhB,CAA0B,CACtD,GAAIA,CAAQ,CAAC+D,uBAAT,CAAiChG,MAArC,CAA6C,CAEzC,GAAIyF,CAAAA,CAAM,CAAGxD,CAAQ,CAAC+D,uBAAT,CAAiC,CAAjC,CAAb,CACA,MAAO/D,CAAAA,CAAQ,CAACyD,OAAT,CAAiBD,CAAjB,CACV,CAJD,IAIO,IAAIzD,CAAK,CAACgE,uBAAN,CAA8BhG,MAAlC,CAA0C,CAC7C,QACH,CAED,MAAO,KACV,CAveH,CAgfMiG,CAAkC,CAAG,SAASjE,CAAT,CAAgBC,CAAhB,CAA0B,CAC/D,GAAIA,CAAQ,CAACiE,uBAAT,CAAiClG,MAArC,CAA6C,CACzC,QACH,CAFD,IAEO,IAAIgC,CAAK,CAACkE,uBAAN,CAA8BlG,MAAlC,CAA0C,CAC7C,QACH,CAED,MAAO,KACV,CAxfH,CAigBMmG,CAA8B,CAAG,SAASnE,CAAT,CAAgBC,CAAhB,CAA0B,CAC3D,GAAI,CAACD,CAAK,CAACoE,yBAAP,EAAoCnE,CAAQ,CAACmE,yBAAjD,CAA4E,CACxE,QACH,CAFD,IAEO,IAAIpE,CAAK,CAACoE,yBAAN,EAAmC,CAACnE,CAAQ,CAACmE,yBAAjD,CAA4E,CAC/E,QACH,CAED,MAAO,KACV,CAzgBH,CAkhBM5D,CAA0B,CAAG,SAASR,CAAT,CAAgBC,CAAhB,CAA0B,IACnDoE,CAAAA,CAAc,CAAGrE,CAAK,CAACqE,cAD4B,CAEnD5D,CAAY,CAAGC,CAAqB,CAACV,CAAD,CAFe,CAGnDW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAHe,CAInDqE,CAAmB,CAAG,CAAC7D,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC8D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CACjG,MAAOA,CAAAA,CAAO,CAACC,eAAR,EAA2BL,CAA3B,EAA6CI,CAAO,CAAC1C,MAAR,EAAkBtB,CAAY,CAACZ,EACtF,CAF8C,CAJQ,CAOnD8E,CAAmB,CAAG,CAAChE,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC4D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CACjG,MAAOA,CAAAA,CAAO,CAACC,eAAR,EAA2BL,CAA3B,EAA6CI,CAAO,CAAC1C,MAAR,EAAkBpB,CAAY,CAACd,EACtF,CAF8C,CAPQ,CAUnD+E,CAAU,CAAGN,CAAmB,CAACtG,MAApB,CAA6BsG,CAAmB,CAAC,CAAD,CAAhD,CAAsD,IAVhB,CAWnDO,CAAU,CAAGF,CAAmB,CAAC3G,MAApB,CAA6B2G,CAAmB,CAAC,CAAD,CAAhD,CAAsD,IAXhB,CAavD,GAAI,CAACC,CAAD,EAAeC,CAAnB,CAA+B,CAC3B,MAAOlE,CAAAA,CACV,CAFD,IAEO,IAAIiE,CAAU,EAAI,CAACC,CAAnB,CAA+B,CAClC,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAtiBH,CA+iBMC,CAAc,CAAG,SAAS9E,CAAT,CAAgBC,CAAhB,CAA0B,IACvCQ,CAAAA,CAAY,CAAGC,CAAqB,CAACV,CAAD,CADG,CAEvCW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAFG,CAI3C,GAAI,CAACQ,CAAD,EAAiB,CAACE,CAAtB,CAAoC,CAChC,MAAO,KACV,CAFD,IAEO,IAAI,CAACF,CAAD,EAAiBE,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAACuB,SAAb,IAAgC,IAC1C,CAFM,IAEA,IAAI,CAACvB,CAAD,EAAiBF,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAACyB,SAAb,IAAiC,IAC3C,CAFM,IAEA,IAAIzB,CAAY,CAACyB,SAAb,EAA0B,CAACvB,CAAY,CAACuB,SAA5C,CAAuD,CAC1D,QACH,CAFM,IAEA,IAAI,CAACzB,CAAY,CAACyB,SAAd,EAA2BvB,CAAY,CAACuB,SAA5C,CAAuD,CAC1D,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAhkBH,CAykBM6C,CAAgB,CAAG,SAAS/E,CAAT,CAAgBC,CAAhB,CAA0B,IACzC+E,CAAAA,CAAc,CAAGhF,CAAK,CAAC6B,WADkB,CAEzCoD,CAAc,CAAGhF,CAAQ,CAAC4B,WAFe,CAI7C,GAAiB,IAAb,GAAA7B,CAAK,CAACH,EAAN,EAAqC,IAAhB,GAAAI,CAAQ,CAACJ,EAAlC,CAA+C,CAE3C,MAAO,KACV,CAHD,IAGO,IAAiB,IAAb,GAAAG,CAAK,CAACH,EAAN,EAAqC,IAAhB,GAAAI,CAAQ,CAACJ,EAAlC,CAA+C,CAElD,MAAO,UACV,CAHM,IAGA,IAAiB,IAAb,GAAAG,CAAK,CAACH,EAAN,EAAqC,IAAhB,GAAAI,CAAQ,CAACJ,EAAlC,CAA+C,CAGlD,MAAO,MACV,CAJM,IAIA,IAAImF,CAAc,EAAIC,CAAtB,CAAsC,CAEzC,MAAO,KACV,CAHM,IAGA,IAAI,CAACD,CAAD,EAAmBC,CAAvB,CAAuC,CAC1C,MAAO,aACV,CAFM,IAEA,IAAID,CAAc,EAAI,CAACC,CAAvB,CAAuC,CAC1C,MAAO,UACV,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAjmBH,CA2mBMC,CAAc,CAAG,SAASlF,CAAT,CAAgBC,CAAhB,CAA0B,IACvCoE,CAAAA,CAAc,CAAGrE,CAAK,CAACqE,cADgB,CAEvC5D,CAAY,CAAGC,CAAqB,CAACV,CAAD,CAFG,CAGvCW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAHG,CAIvCkF,CAAkB,CAAG,CAAC1E,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC8D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CAChG,MAAQA,CAAAA,CAAO,CAAC1C,MAAR,EAAkBsC,CAAlB,EAAoCI,CAAO,CAACC,eAAR,EAA2BjE,CAAY,CAACZ,EAA7E,EACF4E,CAAO,CAAC1C,MAAR,EAAkBtB,CAAY,CAACZ,EAA/B,EAAqC4E,CAAO,CAACC,eAAR,EAA2BL,CACxE,CAH6C,CAJH,CAQvCe,CAAkB,CAAG,CAACzE,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC4D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CAChG,MAAQA,CAAAA,CAAO,CAAC1C,MAAR,EAAkBsC,CAAlB,EAAoCI,CAAO,CAACC,eAAR,EAA2B/D,CAAY,CAACd,EAA7E,EACF4E,CAAO,CAAC1C,MAAR,EAAkBpB,CAAY,CAACd,EAA/B,EAAqC4E,CAAO,CAACC,eAAR,EAA2BL,CACxE,CAH6C,CARH,CAYvCgB,CAAqB,CAA+B,CAA5B,CAAAF,CAAkB,CAACnH,MAZJ,CAavCsH,CAAqB,CAA+B,CAA5B,CAAAF,CAAkB,CAACpH,MAbJ,CAe3C,GAAI,CAACyC,CAAD,EAAiB,CAACE,CAAtB,CAAoC,CAChC,MAAO,KACV,CAFD,IAEO,IAAI0E,CAAqB,EAAIC,CAA7B,CAAoD,CACvD,MAAO,KACV,CAFM,IAEA,IAAI,CAACD,CAAD,EAA0BC,CAA1B,EAAmD,CAAC3E,CAAY,CAACwB,SAArE,CAAgF,CACnF,MAAO,iBACV,CAFM,IAEA,IAAI,CAAC1B,CAAD,EAAiBE,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAACwB,SAAb,CAAyB,SAAzB,CAAqC,IAC/C,CAFM,IAEA,IAAI,CAACxB,CAAD,EAAiBF,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAAC0B,SAAb,CAAyB,aAAzB,CAAyC,IACnD,CAFM,IAEA,IAAI1B,CAAY,CAAC0B,SAAb,EAA0B,CAACxB,CAAY,CAACwB,SAA5C,CAAuD,CAC1D,MAAOmD,CAAAA,CAAqB,CAAG,iBAAH,CAAuB,aACtD,CAFM,IAEA,IAAI,CAAC7E,CAAY,CAAC0B,SAAd,EAA2BxB,CAAY,CAACwB,SAA5C,CAAuD,CAC1D,MAAO,SACV,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CA3oBH,CAopBMoD,CAA8B,CAAG,SAASvF,CAAT,CAAgBC,CAAhB,CAA0B,CAC3D,GAAI,CAACD,CAAK,CAACwF,oBAAP,EAA+BvF,CAAQ,CAACuF,oBAA5C,CAAkE,CAC9D,QACH,CAFD,IAEO,IAAIxF,CAAK,CAACwF,oBAAN,EAA8B,CAACvF,CAAQ,CAACuF,oBAA5C,CAAkE,CACrE,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CA5pBH,CAqqBMC,CAAe,CAAG,SAASzF,CAAT,CAAgBC,CAAhB,CAA0B,IACxCyF,CAAAA,CAAsB,CAAqC,CAAlC,CAAA1F,CAAK,CAAC2F,kBAAN,CAAyB3H,MADV,CAExC4H,CAAsB,CAAwC,CAArC,CAAA3F,CAAQ,CAAC0F,kBAAT,CAA4B3H,MAFb,CAGxC6H,CAA0B,CAAG7F,CAAK,CAAC3D,QAAN,CAAe2B,MAAf,EAAyBiC,CAAQ,CAAC5D,QAAT,CAAkB2B,MAHhC,CAK5C,GAAI,CAAC0H,CAAD,EAA2BE,CAA/B,CAAuD,CACnD,QACH,CAFD,IAEO,IAAIF,CAAsB,EAAI,CAACE,CAA/B,CAAuD,CAC1D,QACH,CAFM,IAEA,IAAIF,CAAsB,EAAIG,CAA9B,CAA0D,CAC7D,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAnrBH,CA4rBMC,CAAqB,CAAG,SAAS9F,CAAT,CAAgBC,CAAhB,CAA0B,IAC9C8F,CAAAA,CAAmB,CAAG/F,CAAK,CAAC2F,kBADkB,CAE9CK,CAAmB,CAAG/F,CAAQ,CAAC0F,kBAFe,CAIlD,GAAIlH,CAAY,CAACsH,CAAD,CAAsBC,CAAtB,CAAhB,CAA4D,CACxD,MAAO,KACV,CAED,GAAIC,CAAAA,CAAI,CAAG7I,CAAU,CAAC2I,CAAD,CAAsBC,CAAtB,CAA2C,SAAS3I,CAAT,CAAYC,CAAZ,CAAe,CAC3E,MAAOD,CAAAA,CAAC,EAAIC,CACf,CAFoB,CAArB,CAIA,MAAO,CACH4I,KAAK,CAAEF,CAAmB,CAAChI,MADxB,CAEHkB,GAAG,CAAE+G,CAAI,CAACxI,YAFP,CAGHwB,MAAM,CAAEgH,CAAI,CAACvI,YAHV,CAKV,CA7sBH,CAstBMgD,CAAqB,CAAG,SAASV,CAAT,CAAgB,CACxC,MAAOhD,CAAAA,MAAM,CAACC,IAAP,CAAY+C,CAAK,CAAC0D,OAAlB,EAA2BlH,MAA3B,CAAkC,SAASC,CAAT,CAAgBgH,CAAhB,CAAwB,CAC7D,GAAIA,CAAM,EAAIzD,CAAK,CAACqE,cAAhB,EAAkC,CAAC5H,CAAvC,CAA8C,CAC1CA,CAAK,CAAGuD,CAAK,CAAC0D,OAAN,CAAcD,CAAd,CACX,CAED,MAAOhH,CAAAA,CACV,CANM,CAMJ,IANI,CAOV,CA9tBH,CAuuBM0J,CAAsB,CAAG,SAAS9B,CAAT,CAAyB+B,CAAzB,CAA+B,IACpDC,CAAAA,CAAe,CAAGD,CAAI,CAAC7B,eAAL,CAAqBC,MAArB,CAA4B,SAASC,CAAT,CAAkB,CAChE,MAAOA,CAAAA,CAAO,CAAC1C,MAAR,EAAkBsC,CAAlB,EAAoCI,CAAO,CAACC,eACtD,CAFqB,CADkC,CAIpD4B,CAAqB,CAA4B,CAAzB,CAAAD,CAAe,CAACrI,MAJY,CAKxD,MAAOoI,CAAAA,CAAI,CAACG,eAAL,EAAwB,CAACH,CAAI,CAACjE,SAA9B,EAA2C,CAACmE,CACtD,CA7uBH,CAsvBMhG,CAAsB,CAAG,SAASN,CAAT,CAAgBC,CAAhB,CAA0B,IAC/CQ,CAAAA,CAAY,CAAGC,CAAqB,CAACV,CAAD,CADW,CAE/CW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAFW,CAG/CuG,CAAW,CAA2B,CAAxB,CAAAxG,CAAK,CAAC3D,QAAN,CAAe2B,MAHkB,CAI/C8C,CAAW,CAA8B,CAA3B,CAAAb,CAAQ,CAAC5D,QAAT,CAAkB2B,MAJe,CAK/CqG,CAAc,CAAGpE,CAAQ,CAACoE,cALqB,CAM/CoC,CAA0B,CAAGhG,CAAY,EAAI0F,CAAsB,CAAC9B,CAAD,CAAiB5D,CAAjB,CANpB,CAO/CiG,CAA0B,CAAG/F,CAAY,EAAIwF,CAAsB,CAAC9B,CAAD,CAAiB1D,CAAjB,CAPpB,CAQ/CgG,CAAiB,CAAG9C,CAAsB,CAAC7D,CAAD,CAAQC,CAAR,CARK,CAYnD,GAAI,CAACD,CAAK,CAACkD,sBAAP,EAAiC,CAACjD,CAAQ,CAACiD,sBAA/C,CAAuE,CACnE,MAAO,KACV,CAGD,GAAI,CAACzC,CAAD,EAAiB,CAACE,CAAtB,CAAoC,CAChC,MAAO,KACV,CAGD,GAAI,CAACF,CAAD,EAAiBiG,CAArB,CAAiD,CAC7C,MAAO,CACH7F,IAAI,GADD,CAEHC,WAAW,CAAEA,CAFV,CAGHsF,IAAI,CAAEzF,CAHH,CAKV,CAKD,GAxByB,KAAAgG,CAwBrB,EAAsBD,CAA1B,CAAsD,CAClD,MAAO,CACH7F,IAAI,GADD,CAEHC,WAAW,CAAEA,CAFV,CAGHsF,IAAI,CAAEzF,CAHH,CAKV,CAGD,GAAIX,CAAK,CAACkD,sBAAN,EAAgCjD,CAAQ,CAACiD,sBAA7C,CAAqE,CACjE,GAAI,CAACuD,CAAD,EAA+BC,CAAnC,CAA+D,CAC3D,MAAO,CACH7F,IAAI,GADD,CAEHC,WAAW,CAAEA,CAFV,CAGHsF,IAAI,CAAEzF,CAHH,CAKV,CAED,GAAI8F,CAA0B,EAAI,CAACC,CAAnC,CAA+D,CAC3D,MAAO,CACH7F,IAAI,GADD,CAEHC,WAAW,CAAEA,CAFV,CAIV,CACJ,CAGD,GAAI,CAACd,CAAK,CAACkD,sBAAP,EAAiCjD,CAAQ,CAACiD,sBAA9C,CAAsE,CAClE,GAAIwD,CAAJ,CAAgC,CAC5B,MAAO,CACH7F,IAAI,GADD,CAEHC,WAAW,CAAEA,CAFV,CAGHsF,IAAI,CAAEzF,CAHH,CAKV,CACJ,CAGD,GAAIX,CAAK,CAACkD,sBAAN,EAAgC,CAACjD,CAAQ,CAACiD,sBAA9C,CAAsE,CAClE,GAAIuD,CAAJ,CAAgC,CAC5B,MAAO,CACH5F,IAAI,GADD,CAEHC,WAAW,CAAE0F,CAFV,CAIV,CACJ,CAED,MAAO,KACV,CAv0BH,CAg1BMI,CAAmB,CAAG,SAAS5G,CAAT,CAAgBC,CAAhB,CAA0B,IAC5CQ,CAAAA,CAAY,CAAGC,CAAqB,CAACV,CAAD,CADQ,CAE5CW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAFQ,CAIhD,GAAI,CAACQ,CAAD,EAAiB,CAACE,CAAtB,CAAoC,CAChC,MAAO,KACV,CAFD,IAEO,IAAIF,CAAY,EAAI,CAACE,CAArB,CAAmC,CACtC,MAAOF,CAAAA,CAAY,CAACyB,SAAb,IAAiC,IAC3C,CAFM,IAEA,IAAI,CAACzB,CAAD,EAAiBE,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAACuB,SAAb,IAAgC,IAC1C,CAFM,IAEA,IAAI,CAACzB,CAAY,CAACyB,SAAd,EAA2BvB,CAAY,CAACuB,SAA5C,CAAuD,CAC1D,QACH,CAFM,IAEA,IAAIzB,CAAY,CAACyB,SAAb,EAA0B,CAACvB,CAAY,CAACuB,SAA5C,CAAuD,CAC1D,QACH,CAED,MAAO,KACV,CAj2BH,CA02BM2E,CAAoB,CAAG,SAAS7G,CAAT,CAAgBC,CAAhB,CAA0B,IAC7CQ,CAAAA,CAAY,CAAGC,CAAqB,CAACV,CAAD,CADS,CAE7CW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAFS,CAIjD,GAAI,CAACQ,CAAD,EAAiB,CAACE,CAAtB,CAAoC,CAChC,MAAO,KACV,CAFD,IAEO,IAAIF,CAAY,EAAI,CAACE,CAArB,CAAmC,CACtC,MAAOF,CAAAA,CAAY,CAACqG,UAAb,CAA0B,IAA1B,GACV,CAFM,IAEA,IAAI,CAACrG,CAAD,EAAiBE,CAArB,CAAmC,CACtC,MAAOA,CAAAA,CAAY,CAACmG,UAAb,CAA0B,IAA1B,GACV,CAFM,IAEA,IAAI,CAACrG,CAAY,CAACqG,UAAd,EAA4BnG,CAAY,CAACmG,UAA7C,CAAyD,CAC5D,QACH,CAFM,IAEA,IAAIrG,CAAY,CAACqG,UAAb,EAA2B,CAACnG,CAAY,CAACmG,UAA7C,CAAyD,CAC5D,QACH,CAED,MAAO,KACV,CA33BH,CAo4BMC,CAA2B,CAAG,SAAS/G,CAAT,CAAgBC,CAAhB,CAA0B,IACpD+G,CAAAA,CAAoB,CAAG/D,CAAyB,CAACjD,CAAD,CAAQC,CAAR,CADI,CAEpDgH,CAAU,CAAGxB,CAAe,CAACzF,CAAD,CAAQC,CAAR,CAFwB,CAGpDI,CAAiB,CAAGC,CAAsB,CAACN,CAAD,CAAQC,CAAR,CAHU,CAIpDiH,CAAc,CAAGN,CAAmB,CAAC5G,CAAD,CAAQC,CAAR,CAJgB,CAKpDkH,CAAe,CAAGN,CAAoB,CAAC7G,CAAD,CAAQC,CAAR,CALc,CAMpDmH,CAAqB,CAAyB,IAAtB,GAAA/G,CAAiB,CAAYA,CAAiB,CAACQ,IAAlB,EAA0BR,CAAiB,CAACS,WAAxD,CAAsE,IAN3D,CAOpDuG,CAAS,CAAG3G,CAAqB,CAACT,CAAD,CAPmB,CAQpDqH,CAAmB,CAAG,SAASC,CAAT,CAAqBC,CAArB,CAAoC,CAC1D,GAAID,CAAJ,CAAgB,CACZ,MAAOC,CAAAA,CACV,CAFD,IAEO,IAAmB,IAAf,GAAAD,CAAU,EAAa,CAACA,CAA5B,CAAwC,CAC3C,GAAI,CAACF,CAAL,CAAgB,CACZ,MAAO,CAACpG,IAAI,CAAE,SAAP,CACV,CAFD,IAEO,IAAIoG,CAAS,CAACnF,SAAd,CAAyB,CAC5B,MAAO,CAACjB,IAAI,CAAE,SAAP,CACV,CAFM,IAEA,IAAIhB,CAAQ,CAAC5D,QAAT,CAAkB2B,MAAlB,EAA4BmI,CAAsB,CAAClG,CAAQ,CAACoE,cAAV,CAA0BgD,CAA1B,CAAtD,CAA4F,CAC/F,MAAO,CACHpG,IAAI,CAAE,aADH,CAEHmF,IAAI,CAAEiB,CAFH,CAIV,CALM,IAKA,IAAI,CAACA,CAAS,CAACP,UAAX,EAA0BO,CAAS,CAACd,eAAV,EAA6B,CAACc,CAAS,CAAClF,SAAtE,CAAkF,CACrF,MAAO,CAAClB,IAAI,CAAE,mBAAP,CACV,CACJ,CAED,MAAO,KACV,CA3BuD,CA6BxD,GAC6B,IAAzB,GAAA+F,CAAoB,EACL,IAAf,GAAAC,CADA,EAEsB,IAAtB,GAAA5G,CAFA,EAGmB,IAAnB,GAAA6G,CAJJ,CAKE,CACE,MAAO,KACV,CAUD,OARIO,CAAAA,CAAM,CAAG,CACT,CAACT,CAAD,CAAuB,CAAC/F,IAAI,CAAE,aAAP,CAAvB,CADS,CAET,CAACgG,CAAD,CAAa,CAAChG,IAAI,CAAE,WAAP,CAAb,CAFS,CAGT,CAACkG,CAAD,CAAkB,CAAClG,IAAI,CAAE,mBAAP,CAAlB,CAHS,CAIT,CAACiG,CAAD,CAAiB,CAACjG,IAAI,CAAE,SAAP,CAAjB,CAJS,CAKT,CAACmG,CAAD,CAAwB,CAACnG,IAAI,CAAE,aAAP,CAAsBmF,IAAI,CAAEiB,CAA5B,CAAxB,CALS,CAQb,CAAS9I,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGkJ,CAAM,CAACzJ,MAA3B,CAAmCO,CAAC,EAApC,CAAwC,IAChCgJ,CAAAA,CAAU,CAAGE,CAAM,CAAClJ,CAAD,CAAN,CAAU,CAAV,CADmB,CAEhCiJ,CAAa,CAAGC,CAAM,CAAClJ,CAAD,CAAN,CAAU,CAAV,CAFgB,CAGhCmJ,CAAM,CAAGJ,CAAmB,CAACC,CAAD,CAAaC,CAAb,CAHI,CAKpC,GAAe,IAAX,GAAAE,CAAJ,CAAqB,CACjB,MAAOA,CAAAA,CACV,CACJ,CAED,MAAO,CACHzG,IAAI,CAAE,SADH,CAGV,CA/7BH,CAw8BM0G,CAA0B,CAAG,SAAS3H,CAAT,CAAgBC,CAAhB,CAA0B,IACnD+G,CAAAA,CAAoB,CAAG/D,CAAyB,CAACjD,CAAD,CAAQC,CAAR,CADG,CAEnDgH,CAAU,CAAGxB,CAAe,CAACzF,CAAD,CAAQC,CAAR,CAFuB,CAIvD,GAA6B,IAAzB,GAAA+G,CAAoB,EAA4B,IAAf,GAAAC,CAArC,CAA0D,CACtD,MAAO,KACV,CAED,GAAID,CAAJ,CAA0B,CACtB,MAAO,CAAC/F,IAAI,CAAE,aAAP,CACV,CAED,GAAIgG,CAAJ,CAAgB,CACZ,MAAO,CAAChG,IAAI,CAAE,WAAP,CACV,CAED,MAAO,CACHA,IAAI,CAAE,SADH,CAGV,CA39BH,CAq+BM2G,CAAU,CAAG,SAAS5H,CAAT,CAAgBC,CAAhB,CAA0B,IACnC4H,CAAAA,CAAO,CAAG7H,CAAK,CAACiB,IADmB,CAEnC6G,CAAO,CAAG7H,CAAQ,CAACgB,IAFgB,CAGnC8G,CAAiB,CAAG/H,CAAK,CAACH,EAHS,CAInCmI,CAAiB,CAAG/H,CAAQ,CAACJ,EAJM,CAKnCoI,CAAY,CAAGjL,MAAM,CAACC,IAAP,CAAY+C,CAAK,CAAC0D,OAAlB,CALoB,CAMnCwE,CAAY,CAAGlL,MAAM,CAACC,IAAP,CAAYgD,CAAQ,CAACyD,OAArB,CANoB,CAQvCuE,CAAY,CAACvJ,IAAb,GACAwJ,CAAY,CAACxJ,IAAb,GAEA,GAAIyJ,CAAAA,CAAgB,CAAGF,CAAY,CAACpJ,KAAb,CAAmB,SAASgB,CAAT,CAAa9B,CAAb,CAAoB,CAC1D,MAAO8B,CAAAA,CAAE,EAAIqI,CAAY,CAACnK,CAAD,CAC5B,CAFsB,CAAvB,CAIA,GAAI8J,CAAO,EAAIC,CAAf,CAAwB,CAEpB,QACH,CAHD,IAGO,IAAIC,CAAiB,EAAI,CAACC,CAA1B,CAA6C,CAIhD,QACH,CALM,IAKA,IAAID,CAAiB,EAAIC,CAArB,EAA0CD,CAAiB,EAAIC,CAAnE,CAAsF,CAEzF,QACH,CAHM,IAGA,IAAI,CAACD,CAAD,EAAsB,CAACC,CAAvB,EAA4C,CAACG,CAAjD,CAAmE,CAKtE,QACH,CAED,MAAO,KACV,CAxgCH,CAqhCMC,CAAuB,CAAG,SAASpI,CAAT,CAAgBC,CAAhB,CAA0B,IAChDoE,CAAAA,CAAc,CAAGpE,CAAQ,CAACoE,cADsB,CAEhD5D,CAAY,CAAGC,CAAqB,CAACV,CAAD,CAFY,CAGhDW,CAAY,CAAGD,CAAqB,CAACT,CAAD,CAHY,CAIhDoI,CAAe,CAAG,CAAC5H,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC8D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CAC7F,MAAOA,CAAAA,CAAO,CAAC1C,MAAR,EAAkBsC,CAC5B,CAF0C,CAJS,CAOhDiE,CAAe,CAAG,CAAC3H,CAAD,CAAgB,EAAhB,CAAqBA,CAAY,CAAC4D,eAAb,CAA6BC,MAA7B,CAAoC,SAASC,CAAT,CAAkB,CAC7F,MAAOA,CAAAA,CAAO,CAAC1C,MAAR,EAAkBsC,CAC5B,CAF0C,CAPS,CAUhDO,CAAU,CAA4B,CAAzB,CAAAyD,CAAe,CAACrK,MAVmB,CAWhD6G,CAAU,CAA4B,CAAzB,CAAAyD,CAAe,CAACtK,MAXmB,CAYhDwI,CAAW,CAA2B,CAAxB,CAAAxG,CAAK,CAAC3D,QAAN,CAAe2B,MAZmB,CAahD8C,CAAW,CAA2B,CAAxB,CAAAd,CAAK,CAAC3D,QAAN,CAAe2B,MAbmB,CAepD,GAAI,CAAC4G,CAAD,EAAeC,CAAf,EAA6B,CAAClE,CAAY,CAACwB,SAA3C,EAAwD,CAACrB,CAA7D,CAA0E,CACtE,MAAOH,CAAAA,CAAY,CAAC4H,QACvB,CAFD,IAEO,IAAI9H,CAAY,EAAI,CAACA,CAAY,CAAC0B,SAA9B,EAA2C0C,CAA3C,EAAyDlE,CAAY,CAACwB,SAA1E,CAAqF,CAExF,QACH,CAHM,IAGA,IAAIyC,CAAU,EAAI,CAACC,CAAnB,CAA+B,CAClC,QACH,CAFM,IAEA,IAAI,CAAC2B,CAAD,EAAgB1F,CAApB,CAAiC,CACpC,QACH,CAFM,IAEA,CACH,MAAO,KACV,CACJ,CAhjCH,CA0jCM0H,CAAU,CAAG,SAASxI,CAAT,CAAgBC,CAAhB,CAA0B,CACvC,GAAIwI,CAAAA,CAAM,CAAG,CACTC,GAAG,CAAE,CACDC,KAAK,CAAEf,CADN,CAEDgB,YAAY,CAAE7I,CAFb,CAGD8I,eAAe,CAAErG,CAHhB,CAIDQ,cAAc,CAAED,CAJf,CAKDiE,oBAAoB,CAAE/D,CALrB,CAMDE,eAAe,CAAEC,CANhB,CAODE,cAAc,CAAED,CAPf,CAQDyF,6BAA6B,CAAE7E,CAR9B,CASDgD,UAAU,CAAExB,CATX,CAUDsD,gBAAgB,CAAEjD,CAVjB,CAWDjE,WAAW,CAAEkD,CAXZ,CADI,CAAb,CAgBA0D,CAAM,CAACtM,CAAS,CAAC+E,kBAAV,CAA6BC,OAA9B,CAAN,CAA+C,CAC3C6H,MAAM,CAAE5I,CADmC,CAE3C6I,MAAM,CAAElC,CAFmC,CAG3CmC,gBAAgB,CAAE3F,CAHyB,CAI3C4F,kBAAkB,CAAExF,CAJuB,CAK3CgD,iBAAiB,CAAE9C,CALwB,CAM3CuF,oBAAoB,CAAErF,CANqB,CAO3CxD,qBAAqB,CAAEC,CAPoB,CAQ3C6I,yBAAyB,CAAElF,CARgB,CAS3CmF,SAAS,CAAExE,CATgC,CAU3CyE,SAAS,CAAErE,CAVgC,CAW3CM,oBAAoB,CAAED,CAXqB,CAY3ClF,iBAAiB,CAAEC,CAZwB,CAa3CkJ,kBAAkB,CAAEpB,CAbuB,CAA/C,CAgBAK,CAAM,CAACtM,CAAS,CAAC+E,kBAAV,CAA6BqB,MAA9B,CAAN,CAA8C,CAC1CyG,MAAM,CAAE5G,CADkC,CAE1C6G,MAAM,CAAEtB,CAFkC,CAA9C,CAKA,GAAI8B,CAAAA,CAAW,CAAGxN,CAAC,CAACyN,MAAF,CAAS,EAAT,CAAajB,CAAM,CAACC,GAApB,CAAlB,CACA,GAAIzI,CAAQ,CAACgB,IAAT,EAAiBhB,CAAQ,CAACgB,IAAT,GAAiBwH,CAAAA,CAAtC,CAA8C,CAE1CgB,CAAW,CAAGxN,CAAC,CAACyN,MAAF,CAASD,CAAT,CAAsBhB,CAAM,CAACxI,CAAQ,CAACgB,IAAV,CAA5B,CACjB,CAED,MAAOjE,CAAAA,MAAM,CAACC,IAAP,CAAYwM,CAAZ,EAAyBjN,MAAzB,CAAgC,SAASmN,CAAT,CAAgBC,CAAhB,CAAqB,IACpDC,CAAAA,CAAS,CAAGJ,CAAW,CAACG,CAAD,CAD6B,CAEpDxK,CAAK,CAAGyK,CAAS,CAAC7J,CAAD,CAAQC,CAAR,CAFmC,CAIxD,GAAc,IAAV,GAAAb,CAAJ,CAAoB,CAChBuK,CAAK,CAACC,CAAD,CAAL,CAAaxK,CAChB,CAED,MAAOuK,CAAAA,CACV,CATM,CASJ,EATI,CAUV,CAhnCH,CAknCE,MAAO,CACHnB,UAAU,CAAEA,CADT,CAGV,CA/nCK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will take 2 view states from the message_drawer_view_conversation\n * module and generate a patch that can be given to the\n * message_drawer_view_conversation_renderer module to update the UI.\n *\n * This module should never modify either state. It's purely a read only\n * module.\n *\n * @module     core_message/message_drawer_view_conversation_patcher\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/user_date',\n    'core_message/message_drawer_view_conversation_constants'\n],\nfunction(\n    $,\n    UserDate,\n    Constants\n) {\n    /**\n     * Sort messages by day.\n     *\n     * @param  {Array} messages The list of messages to sort.\n     * @param  {Number} midnight User's midnight timestamp.\n     * @return {Array} messages sorted by day.\n     */\n    var sortMessagesByDay = function(messages, midnight) {\n        var messagesByDay = messages.reduce(function(carry, message) {\n            var dayTimestamp = UserDate.getUserMidnightForTimestamp(message.timeCreated, midnight);\n\n            if (carry.hasOwnProperty(dayTimestamp)) {\n                carry[dayTimestamp].push(message);\n            } else {\n                carry[dayTimestamp] = [message];\n            }\n\n            return carry;\n        }, {});\n\n        return Object.keys(messagesByDay).map(function(dayTimestamp) {\n            return {\n                timestamp: dayTimestamp,\n                messages: messagesByDay[dayTimestamp]\n            };\n        });\n    };\n\n    /**\n     * Diff 2 arrays using a match function\n     *\n     * @param  {Array} a The first array.\n     * @param  {Array} b The second array.\n     * @param  {Function} matchFunction Function used for matching array items.\n     * @return {Object} Object containing array items missing from a, array items missing from b\n     * and matches\n     */\n    var diffArrays = function(a, b, matchFunction) {\n        // Make copy of it.\n        b = b.slice();\n        var missingFromA = [];\n        var missingFromB = [];\n        var matches = [];\n\n        a.forEach(function(current) {\n            var found = false;\n            var index = 0;\n\n            for (; index < b.length; index++) {\n                var next = b[index];\n\n                if (matchFunction(current, next)) {\n                    found = true;\n                    matches.push({\n                        a: current,\n                        b: next\n                    });\n                    break;\n                }\n            }\n\n            if (found) {\n                // This day has been processed so removed it from the list.\n                b.splice(index, 1);\n            } else {\n                // If we couldn't find it in the next messages then it means\n                // it needs to be added.\n                missingFromB.push(current);\n            }\n        });\n\n        missingFromA = b;\n\n        return {\n            missingFromA: missingFromA,\n            missingFromB: missingFromB,\n            matches: matches\n        };\n    };\n\n    /**\n     * Find an element in a array based on a matching function.\n     *\n     * @param  {array} array Array to search.\n     * @param  {Function} breakFunction Function to run on array item.\n     * @return {*} The array item.\n     */\n    var findPositionInArray = function(array, breakFunction) {\n        var before = null;\n\n        for (var i = 0; i < array.length; i++) {\n            var candidate = array[i];\n\n            if (breakFunction(candidate)) {\n                return candidate;\n            }\n        }\n\n        return before;\n    };\n\n    /**\n     * Check if 2 arrays are equal.\n     *\n     * @param  {Array} a The first array.\n     * @param  {Array} b The second array.\n     * @return {Boolean} Are arrays equal.\n     */\n    var isArrayEqual = function(a, b) {\n        a.sort();\n        b.sort();\n        var aLength = a.length;\n        var bLength = b.length;\n\n        if (aLength < 1 && bLength < 1) {\n            return true;\n        }\n\n        if (aLength != bLength) {\n            return false;\n        }\n\n        return a.every(function(item, index) {\n            return item == b[index];\n        });\n    };\n\n    /**\n     * Build a patch based on days.\n     *\n     * @param  {Object} current Current list current items.\n     * @param  {Object} daysDiff Difference between current and new.\n     * @return {Object} Patch with elements to add and remove.\n     */\n    var buildDaysPatch = function(current, daysDiff) {\n        return {\n            remove: daysDiff.missingFromB,\n            add: daysDiff.missingFromA.map(function(day) {\n                // Any days left over in the \"next\" list weren't in the \"current\" list\n                // so they will need to be added.\n                var before = findPositionInArray(current, function(candidate) {\n                    return day.timestamp < candidate.timestamp;\n                });\n\n                return {\n                    before: before,\n                    value: day\n                };\n            })\n        };\n    };\n\n    /**\n     * Build the messages patch for each day.\n     *\n     * @param {Array} matchingDays Array of old and new messages sorted by day.\n     * @return {Object} patch.\n     */\n    var buildMessagesPatch = function(matchingDays) {\n        var remove = [];\n        var add = [];\n\n        matchingDays.forEach(function(days) {\n            var dayCurrent = days.a;\n            var dayNext = days.b;\n            var messagesDiff = diffArrays(dayCurrent.messages, dayNext.messages, function(messageCurrent, messageNext) {\n                return messageCurrent.id == messageNext.id;\n            });\n\n            remove = remove.concat(messagesDiff.missingFromB);\n\n            messagesDiff.missingFromA.forEach(function(message) {\n                var before = findPositionInArray(dayCurrent.messages, function(candidate) {\n                    if (message.timeCreated == candidate.timeCreated) {\n                        return message.id < candidate.id;\n                    } else {\n                        return message.timeCreated < candidate.timeCreated;\n                    }\n                });\n\n                add.push({\n                    before: before,\n                    value: message,\n                    day: dayCurrent\n                });\n            });\n        });\n\n        return {\n            add: add,\n            remove: remove\n        };\n    };\n\n    /**\n     * Build a patch for this conversation.\n     *\n     * @param  {Object} state, The current state of this conversation.\n     * @param  {Object} newState, The new state of this conversation.\n     * @return {Object} Patch with days and messsages for each day.\n     */\n    var buildConversationPatch = function(state, newState) {\n        var oldMessageIds = state.messages.map(function(message) {\n            return message.id;\n        });\n        var newMessageIds = newState.messages.map(function(message) {\n            return message.id;\n        });\n\n        if (!isArrayEqual(oldMessageIds, newMessageIds)) {\n            var current = sortMessagesByDay(state.messages, state.midnight);\n            var next = sortMessagesByDay(newState.messages, newState.midnight);\n            var daysDiff = diffArrays(current, next, function(dayCurrent, dayNext) {\n                return dayCurrent.timestamp == dayNext.timestamp;\n            });\n\n            return {\n                days: buildDaysPatch(current, daysDiff),\n                messages: buildMessagesPatch(daysDiff.matches)\n            };\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build a patch for the header of this conversation. Check if this conversation\n     * is a group conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildHeaderPatchTypePrivate = function(state, newState) {\n        var requireAddContact = buildRequireAddContact(state, newState);\n        var confirmContactRequest = buildConfirmContactRequest(state, newState);\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var requiresAddContact = requireAddContact && requireAddContact.show && !requireAddContact.hasMessages;\n        var requiredAddContact = requireAddContact && !requireAddContact.show;\n        // Render the header once we've got a user.\n        var shouldRenderHeader = !oldOtherUser && newOtherUser;\n        // We should also re-render the header if the other user requires\n        // being added as a contact or if they did but no longer do.\n        shouldRenderHeader = shouldRenderHeader || requiresAddContact || requiredAddContact;\n        // Finally, we should re-render if the other user has sent this user\n        // a contact request that is waiting for approval or if it's been approved/declined.\n        shouldRenderHeader = shouldRenderHeader || confirmContactRequest !== null;\n\n        if (shouldRenderHeader) {\n            return {\n                type: Constants.CONVERSATION_TYPES.PRIVATE,\n                // We can show controls if the other user doesn't require add contact\n                // and we aren't waiting for this user to respond to a contact request.\n                showControls: !requiresAddContact && !confirmContactRequest,\n                context: {\n                    id: newState.id,\n                    name: newState.name,\n                    subname: newState.subname,\n                    totalmembercount: newState.totalMemberCount,\n                    imageurl: newState.imageUrl,\n                    isfavourite: newState.isFavourite,\n                    // Don't show favouriting if we don't have a conversation.\n                    showfavourite: newState.id !== null,\n                    userid: newOtherUser.id,\n                    showonlinestatus: newOtherUser.showonlinestatus,\n                    isonline: newOtherUser.isonline,\n                    isblocked: newOtherUser.isblocked,\n                    iscontact: newOtherUser.iscontact\n                }\n            };\n        }\n\n        return null;\n    };\n\n\n    /**\n     * Build a patch for the header of this conversation. Check if this conversation\n     * is a group conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildHeaderPatchTypePublic = function(state, newState) {\n        var oldMemberCount = state.totalMemberCount;\n        var newMemberCount = newState.totalMemberCount;\n\n        if (oldMemberCount != newMemberCount) {\n            return {\n                type: Constants.CONVERSATION_TYPES.PUBLIC,\n                showControls: true,\n                context: {\n                    id: newState.id,\n                    name: newState.name,\n                    subname: newState.subname,\n                    totalmembercount: newState.totalMemberCount,\n                    imageurl: newState.imageUrl,\n                    isfavourite: newState.isFavourite,\n                    // Don't show favouriting if we don't have a conversation.\n                    showfavourite: newState.id !== null\n                }\n            };\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Find the newest or oldest message.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Number} Oldest or newest message id.\n     */\n    var buildScrollToMessagePatch = function(state, newState) {\n        var oldMessages = state.messages;\n        var newMessages = newState.messages;\n\n        if (newMessages.length < 1) {\n            return null;\n        }\n\n        if (oldMessages.length < 1) {\n            return newMessages[newMessages.length - 1].id;\n        }\n\n        var previousNewest = oldMessages[state.messages.length - 1];\n        var currentNewest = newMessages[newMessages.length - 1];\n        var previousOldest = oldMessages[0];\n        var currentOldest = newMessages[0];\n\n        if (previousNewest.id != currentNewest.id) {\n            return currentNewest.id;\n        } else if (previousOldest.id != currentOldest.id) {\n            return previousOldest.id;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if members should be loaded.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingMembersPatch = function(state, newState) {\n        if (!state.loadingMembers && newState.loadingMembers) {\n            return true;\n        } else if (state.loadingMembers && !newState.loadingMembers) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if the messages are being loaded for the first time.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingFirstMessages = function(state, newState) {\n        if (state.hasTriedToLoadMessages === newState.hasTriedToLoadMessages) {\n            return null;\n        } else if (!newState.hasTriedToLoadMessages && newState.loadingMessages) {\n            return true;\n        } else if (newState.hasTriedToLoadMessages && !newState.loadingMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if the messages are still being loaded\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingMessages = function(state, newState) {\n        if (!state.loadingMessages && newState.loadingMessages) {\n            return true;\n        } else if (state.loadingMessages && !newState.loadingMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if the messages are still being send\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null} User Object if Object.\n     */\n    var buildSendingMessage = function(state, newState) {\n        if (!state.sendingMessage && newState.sendingMessage) {\n            return true;\n        } else if (state.sendingMessage && !newState.sendingMessage) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Get the user Object of user to be blocked if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmBlockUser = function(state, newState) {\n        if (newState.pendingBlockUserIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingBlockUserIds[0];\n            return newState.members[userId];\n        } else if (state.pendingBlockUserIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be unblocked if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmUnblockUser = function(state, newState) {\n        if (newState.pendingUnblockUserIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingUnblockUserIds[0];\n            return newState.members[userId];\n        } else if (state.pendingUnblockUserIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be added as contact if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmAddContact = function(state, newState) {\n        if (newState.pendingAddContactIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingAddContactIds[0];\n            return newState.members[userId];\n        } else if (state.pendingAddContactIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be removed as contact if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmRemoveContact = function(state, newState) {\n        if (newState.pendingRemoveContactIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingRemoveContactIds[0];\n            return newState.members[userId];\n        } else if (state.pendingRemoveContactIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there are any messages to be deleted.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildConfirmDeleteSelectedMessages = function(state, newState) {\n        if (newState.pendingDeleteMessageIds.length) {\n            return true;\n        } else if (state.pendingDeleteMessageIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there is a conversation to be deleted.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildConfirmDeleteConversation = function(state, newState) {\n        if (!state.pendingDeleteConversation && newState.pendingDeleteConversation) {\n            return true;\n        } else if (state.pendingDeleteConversation && !newState.pendingDeleteConversation) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there is a pending contact request to accept or decline.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildConfirmContactRequest = function(state, newState) {\n        var loggedInUserId = state.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldReceivedRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return request.requesteduserid == loggedInUserId && request.userid == oldOtherUser.id;\n        });\n        var newReceivedRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return request.requesteduserid == loggedInUserId && request.userid == newOtherUser.id;\n        });\n        var oldRequest = oldReceivedRequests.length ? oldReceivedRequests[0] : null;\n        var newRequest = newReceivedRequests.length ? newReceivedRequests[0] : null;\n\n        if (!oldRequest && newRequest) {\n            return newOtherUser;\n        } else if (oldRequest && !newRequest) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes in blocked users.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsBlocked = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.isblocked ? true : null;\n        } else if (!newOtherUser && oldOtherUser) {\n            return oldOtherUser.isblocked ? false : null;\n        } else if (oldOtherUser.isblocked && !newOtherUser.isblocked) {\n            return false;\n        } else if (!oldOtherUser.isblocked && newOtherUser.isblocked) {\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes the conversation favourite state.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsFavourite = function(state, newState) {\n        var oldIsFavourite = state.isFavourite;\n        var newIsFavourite = newState.isFavourite;\n\n        if (state.id === null && newState.id === null) {\n            // The conversation isn't yet created so don't change anything.\n            return null;\n        } else if (state.id === null && newState.id !== null) {\n            // The conversation was created so we can show the add favourite button.\n            return 'show-add';\n        } else if (state.id !== null && newState.id === null) {\n            // We're changing from a created conversation to a new conversation so hide\n            // the favouriting functionality for now.\n            return 'hide';\n        } else if (oldIsFavourite == newIsFavourite) {\n            // No change.\n            return null;\n        } else if (!oldIsFavourite && newIsFavourite) {\n            return 'show-remove';\n        } else if (oldIsFavourite && !newIsFavourite) {\n            return 'show-add';\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes in the contact status of the current user\n     * and other user.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsContact = function(state, newState) {\n        var loggedInUserId = state.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldContactRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return (request.userid == loggedInUserId && request.requesteduserid == oldOtherUser.id) ||\n                (request.userid == oldOtherUser.id && request.requesteduserid == loggedInUserId);\n        });\n        var newContactRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return (request.userid == loggedInUserId && request.requesteduserid == newOtherUser.id) ||\n                (request.userid == newOtherUser.id && request.requesteduserid == loggedInUserId);\n        });\n        var oldHasContactRequests = oldContactRequests.length > 0;\n        var newHasContactRequests = newContactRequests.length > 0;\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldHasContactRequests && newHasContactRequests) {\n            return null;\n        } else if (!oldHasContactRequests && newHasContactRequests && !newOtherUser.iscontact) {\n            return 'pending-contact';\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.iscontact ? 'contact' : null;\n        } else if (!newOtherUser && oldOtherUser) {\n            return oldOtherUser.iscontact ? 'non-contact' : null;\n        } else if (oldOtherUser.iscontact && !newOtherUser.iscontact) {\n            return newHasContactRequests ? 'pending-contact' : 'non-contact';\n        } else if (!oldOtherUser.iscontact && newOtherUser.iscontact) {\n            return 'contact';\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if a confirm action is active.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingConfirmationAction = function(state, newState) {\n        if (!state.loadingConfirmAction && newState.loadingConfirmAction) {\n            return true;\n        } else if (state.loadingConfirmAction && !newState.loadingConfirmAction) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if a edit mode is active.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildInEditMode = function(state, newState) {\n        var oldHasSelectedMessages = state.selectedMessageIds.length > 0;\n        var newHasSelectedMessages = newState.selectedMessageIds.length > 0;\n        var numberOfMessagesHasChanged = state.messages.length != newState.messages.length;\n\n        if (!oldHasSelectedMessages && newHasSelectedMessages) {\n            return true;\n        } else if (oldHasSelectedMessages && !newHasSelectedMessages) {\n            return false;\n        } else if (oldHasSelectedMessages && numberOfMessagesHasChanged) {\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build a patch for the messages selected.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildSelectedMessages = function(state, newState) {\n        var oldSelectedMessages = state.selectedMessageIds;\n        var newSelectedMessages = newState.selectedMessageIds;\n\n        if (isArrayEqual(oldSelectedMessages, newSelectedMessages)) {\n            return null;\n        }\n\n        var diff = diffArrays(oldSelectedMessages, newSelectedMessages, function(a, b) {\n            return a == b;\n        });\n\n        return {\n            count: newSelectedMessages.length,\n            add: diff.missingFromA,\n            remove: diff.missingFromB\n        };\n    };\n\n    /**\n     * Get a list of users from the state that are not the logged in user. Use to find group\n     * message members or the other user in a conversation.\n     *\n     * @param  {Object} state State\n     * @return {Array} List of users.\n     */\n    var getOtherUserFromState = function(state) {\n        return Object.keys(state.members).reduce(function(carry, userId) {\n            if (userId != state.loggedInUserId && !carry) {\n                carry = state.members[userId];\n            }\n\n            return carry;\n        }, null);\n    };\n\n    /**\n     * Check if the given user requires a contact request from the logged in user.\n     *\n     * @param  {Integer} loggedInUserId The logged in user id\n     * @param  {Object} user User record\n     * @return {Bool}\n     */\n    var requiresContactRequest = function(loggedInUserId, user) {\n        var contactRequests = user.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId || request.requesteduserid;\n        });\n        var hasSentContactRequest = contactRequests.length > 0;\n        return user.requirescontact && !user.iscontact && !hasSentContactRequest;\n    };\n\n    /**\n     * Check if other users are required to be added as contact.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} Object controlling the required to add contact dialog variables.\n     */\n    var buildRequireAddContact = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var hadMessages = state.messages.length > 0;\n        var hasMessages = newState.messages.length > 0;\n        var loggedInUserId = newState.loggedInUserId;\n        var prevRequiresContactRequest = oldOtherUser && requiresContactRequest(loggedInUserId, oldOtherUser);\n        var nextRequiresContactRequest = newOtherUser && requiresContactRequest(loggedInUserId, newOtherUser);\n        var confirmAddContact = buildConfirmAddContact(state, newState);\n        var finishedAddContact = confirmAddContact === false;\n\n        // Still doing first load.\n        if (!state.hasTriedToLoadMessages && !newState.hasTriedToLoadMessages) {\n            return null;\n        }\n\n        // No users yet.\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        }\n\n        // We've loaded a new user and they require a contact request.\n        if (!oldOtherUser && nextRequiresContactRequest) {\n            return {\n                show: true,\n                hasMessages: hasMessages,\n                user: newOtherUser\n            };\n        }\n\n        // The logged in user has completed the confirm contact request dialogue\n        // but the other user still requires a contact request which means the logged\n        // in user either declined the confirmation or it failed.\n        if (finishedAddContact && nextRequiresContactRequest) {\n            return {\n                show: true,\n                hasMessages: hasMessages,\n                user: newOtherUser\n            };\n        }\n\n        // Everything is loaded.\n        if (state.hasTriedToLoadMessages && newState.hasTriedToLoadMessages) {\n            if (!prevRequiresContactRequest && nextRequiresContactRequest) {\n                return {\n                    show: true,\n                    hasMessages: hasMessages,\n                    user: newOtherUser\n                };\n            }\n\n            if (prevRequiresContactRequest && !nextRequiresContactRequest) {\n                return {\n                    show: false,\n                    hasMessages: hasMessages\n                };\n            }\n        }\n\n        // First load just completed.\n        if (!state.hasTriedToLoadMessages && newState.hasTriedToLoadMessages) {\n            if (nextRequiresContactRequest) {\n                return {\n                    show: true,\n                    hasMessages: hasMessages,\n                    user: newOtherUser\n                };\n            }\n        }\n\n        // Being reset.\n        if (state.hasTriedToLoadMessages && !newState.hasTriedToLoadMessages) {\n            if (prevRequiresContactRequest) {\n                return {\n                    show: false,\n                    hasMessages: hadMessages\n                };\n            }\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if other users are required to be unblocked.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildRequireUnblock = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldOtherUser && !newOtherUser) {\n            return oldOtherUser.isblocked ? false : null;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.isblocked ? true : null;\n        } else if (!oldOtherUser.isblocked && newOtherUser.isblocked) {\n            return true;\n        } else if (oldOtherUser.isblocked && !newOtherUser.isblocked) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if other users can be messaged.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildUnableToMessage = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldOtherUser && !newOtherUser) {\n            return oldOtherUser.canmessage ? null : true;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.canmessage ? null : true;\n        } else if (!oldOtherUser.canmessage && newOtherUser.canmessage) {\n            return false;\n        } else if (oldOtherUser.canmessage && !newOtherUser.canmessage) {\n            return true;\n        }\n\n        return null;\n    };\n\n    /**\n     * Build patch for footer information for a private conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} containing footer state type.\n     */\n    var buildFooterPatchTypePrivate = function(state, newState) {\n        var loadingFirstMessages = buildLoadingFirstMessages(state, newState);\n        var inEditMode = buildInEditMode(state, newState);\n        var requireAddContact = buildRequireAddContact(state, newState);\n        var requireUnblock = buildRequireUnblock(state, newState);\n        var unableToMessage = buildUnableToMessage(state, newState);\n        var showRequireAddContact = requireAddContact !== null ? requireAddContact.show && requireAddContact.hasMessages : null;\n        var otherUser = getOtherUserFromState(newState);\n        var generateReturnValue = function(checkValue, successReturn) {\n            if (checkValue) {\n                return successReturn;\n            } else if (checkValue !== null && !checkValue) {\n                if (!otherUser) {\n                    return {type: 'content'};\n                } else if (otherUser.isblocked) {\n                    return {type: 'unblock'};\n                } else if (newState.messages.length && requiresContactRequest(newState.loggedInUserId, otherUser)) {\n                    return {\n                        type: 'add-contact',\n                        user: otherUser\n                    };\n                } else if (!otherUser.canmessage || (otherUser.requirescontact && !otherUser.iscontact)) {\n                    return {type: 'unable-to-message'};\n                }\n            }\n\n            return null;\n        };\n\n        if (\n            loadingFirstMessages === null &&\n            inEditMode === null &&\n            requireAddContact === null &&\n            requireUnblock === null\n        ) {\n            return null;\n        }\n\n        var checks = [\n            [loadingFirstMessages, {type: 'placeholder'}],\n            [inEditMode, {type: 'edit-mode'}],\n            [unableToMessage, {type: 'unable-to-message'}],\n            [requireUnblock, {type: 'unblock'}],\n            [showRequireAddContact, {type: 'add-contact', user: otherUser}]\n        ];\n\n        for (var i = 0; i < checks.length; i++) {\n            var checkValue = checks[i][0];\n            var successReturn = checks[i][1];\n            var result = generateReturnValue(checkValue, successReturn);\n\n            if (result !== null) {\n                return result;\n            }\n        }\n\n        return {\n            type: 'content'\n        };\n    };\n\n    /**\n     * Build patch for footer information for a public conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} containing footer state type.\n     */\n    var buildFooterPatchTypePublic = function(state, newState) {\n        var loadingFirstMessages = buildLoadingFirstMessages(state, newState);\n        var inEditMode = buildInEditMode(state, newState);\n\n        if (loadingFirstMessages === null && inEditMode === null) {\n            return null;\n        }\n\n        if (loadingFirstMessages) {\n            return {type: 'placeholder'};\n        }\n\n        if (inEditMode) {\n            return {type: 'edit-mode'};\n        }\n\n        return {\n            type: 'content'\n        };\n    };\n\n    /**\n     * Check if we're viewing a different conversation. If so then we need to\n     * reset the UI.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {bool|null} If a reset needs to occur\n     */\n    var buildReset = function(state, newState) {\n        var oldType = state.type;\n        var newType = newState.type;\n        var oldConversationId = state.id;\n        var newConversationId = newState.id;\n        var oldMemberIds = Object.keys(state.members);\n        var newMemberIds = Object.keys(newState.members);\n\n        oldMemberIds.sort();\n        newMemberIds.sort();\n\n        var membersUnchanged = oldMemberIds.every(function(id, index) {\n            return id == newMemberIds[index];\n        });\n\n        if (oldType != newType) {\n            // If we've changed conversation type then we need to reset.\n            return true;\n        } else if (oldConversationId && !newConversationId) {\n            // We previously had a conversation id but no longer do. This likely means\n            // the user is viewing the conversation with someone they've never spoken to\n            // before.\n            return true;\n        } else if (oldConversationId && newConversationId && oldConversationId != newConversationId) {\n            // If we had a conversation id and it's changed then we need to reset.\n            return true;\n        } else if (!oldConversationId && !newConversationId && !membersUnchanged) {\n            // If we never had a conversation id but the members of the conversation have\n            // changed then we need to reset. This can happen if the user goes from viewing\n            // a user they've never had a conversation with to viewing a different user that\n            // they've never had a conversation with.\n            return true;\n        }\n\n        return null;\n    };\n\n    /**\n     * We should show the contact request sent message if the user just sent\n     * a contact request to the other user and there are no messages in the\n     * conversation.\n     *\n     * The messages should be hidden when there are messages in the conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {string|false|null}\n     */\n    var buildContactRequestSent = function(state, newState) {\n        var loggedInUserId = newState.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldSentRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId;\n        });\n        var newSentRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId;\n        });\n        var oldRequest = oldSentRequests.length > 0;\n        var newRequest = newSentRequests.length > 0;\n        var hadMessages = state.messages.length > 0;\n        var hasMessages = state.messages.length > 0;\n\n        if (!oldRequest && newRequest && !newOtherUser.iscontact && !hasMessages) {\n            return newOtherUser.fullname;\n        } else if (oldOtherUser && !oldOtherUser.iscontact && newRequest && newOtherUser.iscontact) {\n            // Contact request accepted.\n            return false;\n        } else if (oldRequest && !newRequest) {\n            return false;\n        } else if (!hadMessages && hasMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build the full patch comparing the current state and the new state. This patch is used by\n     * the conversation renderer to render the UI on any update.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} Patch containing all information changed.\n     */\n    var buildPatch = function(state, newState) {\n        var config = {\n            all: {\n                reset: buildReset,\n                conversation: buildConversationPatch,\n                scrollToMessage: buildScrollToMessagePatch,\n                loadingMembers: buildLoadingMembersPatch,\n                loadingFirstMessages: buildLoadingFirstMessages,\n                loadingMessages: buildLoadingMessages,\n                sendingMessage: buildSendingMessage,\n                confirmDeleteSelectedMessages: buildConfirmDeleteSelectedMessages,\n                inEditMode: buildInEditMode,\n                selectedMessages: buildSelectedMessages,\n                isFavourite: buildIsFavourite\n            }\n        };\n        // These build functions are only applicable to private conversations.\n        config[Constants.CONVERSATION_TYPES.PRIVATE] = {\n            header: buildHeaderPatchTypePrivate,\n            footer: buildFooterPatchTypePrivate,\n            confirmBlockUser: buildConfirmBlockUser,\n            confirmUnblockUser: buildConfirmUnblockUser,\n            confirmAddContact: buildConfirmAddContact,\n            confirmRemoveContact: buildConfirmRemoveContact,\n            confirmContactRequest: buildConfirmContactRequest,\n            confirmDeleteConversation: buildConfirmDeleteConversation,\n            isBlocked: buildIsBlocked,\n            isContact: buildIsContact,\n            loadingConfirmAction: buildLoadingConfirmationAction,\n            requireAddContact: buildRequireAddContact,\n            contactRequestSent: buildContactRequestSent\n        };\n        // These build functions are only applicable to public (group) conversations.\n        config[Constants.CONVERSATION_TYPES.PUBLIC] = {\n            header: buildHeaderPatchTypePublic,\n            footer: buildFooterPatchTypePublic,\n        };\n\n        var patchConfig = $.extend({}, config.all);\n        if (newState.type && newState.type in config) {\n            // Add the type specific builders to the patch config.\n            patchConfig = $.extend(patchConfig, config[newState.type]);\n        }\n\n        return Object.keys(patchConfig).reduce(function(patch, key) {\n            var buildFunc = patchConfig[key];\n            var value = buildFunc(state, newState);\n\n            if (value !== null) {\n                patch[key] = value;\n            }\n\n            return patch;\n        }, {});\n    };\n\n    return {\n        buildPatch: buildPatch\n    };\n});\n"],"file":"message_drawer_view_conversation_patcher.min.js"}