{"version":3,"sources":["../src/preferences_processor_form.js"],"names":["define","$","Ajax","Notification","CustomEvents","ProcessorForm","element","root","userId","attr","name","find","on","e","preventDefault","save","done","document","trigger","bind","cancelButton","events","activate","prototype","startLoading","addClass","stopLoading","removeClass","isLoading","hasClass","Deferred","data","serializeArray","request","methodname","args","userid","formvalues","call","fail","exception","always"],"mappings":"AAwBAA,MAAM,2CAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAA6C,gCAA7C,CAAD,CACE,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgCC,CAAhC,CAA8C,CAMlD,GAAIC,CAAAA,CAAa,CAAG,SAASC,CAAT,CAAkB,CAClC,KAAKC,IAAL,CAAYN,CAAC,CAACK,CAAD,CAAb,CACA,KAAKE,MAAL,CAAc,KAAKD,IAAL,CAAUE,IAAV,CAAe,cAAf,CAAd,CACA,KAAKC,IAAL,CAAY,KAAKH,IAAL,CAAUE,IAAV,CAAe,qBAAf,CAAZ,CAEA,KAAKF,IAAL,CAAUI,IAAV,CAAe,MAAf,EAAuBC,EAAvB,CAA0B,QAA1B,CAAoC,SAASC,CAAT,CAAY,CAC5CA,CAAC,CAACC,cAAF,GACA,KAAKC,IAAL,GAAYC,IAAZ,CAAiB,UAAW,CACxBf,CAAC,CAACgB,QAAD,CAAD,CAAYC,OAAZ,CAAoB,mBAApB,CACH,CAFD,CAGH,CALmC,CAKlCC,IALkC,CAK7B,IAL6B,CAApC,EAOA,GAAIC,CAAAA,CAAY,CAAG,KAAKb,IAAL,CAAUI,IAAV,CAAe,sBAAf,CAAnB,CACAP,CAAY,CAACJ,MAAb,CAAoBoB,CAApB,CAAkC,CAC9BhB,CAAY,CAACiB,MAAb,CAAoBC,QADU,CAAlC,EAIAF,CAAY,CAACR,EAAb,CAAgBR,CAAY,CAACiB,MAAb,CAAoBC,QAApC,CAA8C,UAAW,CACrDrB,CAAC,CAACgB,QAAD,CAAD,CAAYC,OAAZ,CAAoB,mBAApB,CACH,CAFD,CAGH,CApBD,CA2BAb,CAAa,CAACkB,SAAd,CAAwBC,YAAxB,CAAuC,UAAW,CAC9C,KAAKjB,IAAL,CAAUkB,QAAV,CAAmB,SAAnB,CACH,CAFD,CASApB,CAAa,CAACkB,SAAd,CAAwBG,WAAxB,CAAsC,UAAW,CAC7C,KAAKnB,IAAL,CAAUoB,WAAV,CAAsB,SAAtB,CACH,CAFD,CAUAtB,CAAa,CAACkB,SAAd,CAAwBK,SAAxB,CAAoC,UAAW,CAC3C,MAAO,MAAKrB,IAAL,CAAUsB,QAAV,CAAmB,SAAnB,CACV,CAFD,CAUAxB,CAAa,CAACkB,SAAd,CAAwBR,IAAxB,CAA+B,UAAW,CACtC,GAAI,KAAKa,SAAL,EAAJ,CAAsB,CAClB,MAAO3B,CAAAA,CAAC,CAAC6B,QAAF,EACV,CAED,KAAKN,YAAL,GALsC,GAOlCO,CAAAA,CAAI,CAAG,KAAKxB,IAAL,CAAUI,IAAV,CAAe,MAAf,EAAuBqB,cAAvB,EAP2B,CAQlCC,CAAO,CAAG,CACVC,UAAU,CAAE,4CADF,CAEVC,IAAI,CAAE,CACFC,MAAM,CAAE,KAAK5B,MADX,CAEFE,IAAI,CAAE,KAAKA,IAFT,CAGF2B,UAAU,CAAEN,CAHV,CAFI,CARwB,CAiBtC,MAAO7B,CAAAA,CAAI,CAACoC,IAAL,CAAU,CAACL,CAAD,CAAV,EAAqB,CAArB,EACFM,IADE,CACGpC,CAAY,CAACqC,SADhB,EAEFC,MAFE,CAEK,UAAW,CACf,KAAKf,WAAL,EACH,CAFO,CAENP,IAFM,CAED,IAFC,CAFL,CAKV,CAtBD,CAwBA,MAAOd,CAAAA,CACV,CAxFK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manages the processor form on the message preferences page.\n *\n * @module     core_message/preferences_processor_form\n * @class      preferences_processor_form\n * @package    message\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/custom_interaction_events'],\n        function($, Ajax, Notification, CustomEvents) {\n    /**\n     * Constructor for the ProcessorForm.\n     *\n     * @param {object} element jQuery object root element of the preference\n     */\n    var ProcessorForm = function(element) {\n        this.root = $(element);\n        this.userId = this.root.attr('data-user-id');\n        this.name = this.root.attr('data-processor-name');\n\n        this.root.find('form').on('submit', function(e) {\n            e.preventDefault();\n            this.save().done(function() {\n                $(document).trigger('mpp:formsubmitted');\n            });\n        }.bind(this));\n\n        var cancelButton = this.root.find('[data-cancel-button]');\n        CustomEvents.define(cancelButton, [\n            CustomEvents.events.activate\n        ]);\n\n        cancelButton.on(CustomEvents.events.activate, function() {\n            $(document).trigger('mpp:formcancelled');\n        });\n    };\n\n    /**\n     * Flag the processor as loading.\n     *\n     * @method startLoading\n     */\n    ProcessorForm.prototype.startLoading = function() {\n        this.root.addClass('loading');\n    };\n\n    /**\n     * Remove the loading flag for this processor.\n     *\n     * @method stopLoading\n     */\n    ProcessorForm.prototype.stopLoading = function() {\n        this.root.removeClass('loading');\n    };\n\n    /**\n     * Check if this processor is loading.\n     *\n     * @method isLoading\n     * @return {bool}\n     */\n    ProcessorForm.prototype.isLoading = function() {\n        return this.root.hasClass('loading');\n    };\n\n    /**\n     * Persist the processor configuration.\n     *\n     * @method save\n     * @return {object} jQuery promise\n     */\n    ProcessorForm.prototype.save = function() {\n        if (this.isLoading()) {\n            return $.Deferred();\n        }\n\n        this.startLoading();\n\n        var data = this.root.find('form').serializeArray();\n        var request = {\n            methodname: 'core_message_message_processor_config_form',\n            args: {\n                userid: this.userId,\n                name: this.name,\n                formvalues: data,\n            }\n        };\n\n        return Ajax.call([request])[0]\n            .fail(Notification.exception)\n            .always(function() {\n                this.stopLoading();\n            }.bind(this));\n    };\n\n    return ProcessorForm;\n});\n"],"file":"preferences_processor_form.es6.js"}