{"version":3,"sources":["../src/message_drawer_view_overview.js"],"names":["define","$","KeyCodes","PubSub","Str","Router","Routes","MessageDrawerEvents","Section","MessageRepository","SELECTORS","CONTACT_REQUEST_COUNT","FAVOURITES","GROUP_MESSAGES","MESSAGES","SEARCH_INPUT","SECTION_TOGGLE_BUTTON","CONVERSATION_TYPES","PRIVATE","PUBLIC","FAVOURITE","loadAllCountsPromise","loadAllCounts","loggedInUserId","getAllConversationCounts","filterCountsByType","counts","type","favourites","types","openSection","sections","isAlreadyOpen","some","section","sectionRoot","isVisible","sort","a","b","aTotal","aUnread","bTotal","bUnread","button","find","click","getSearchInput","header","getLoggedInUserId","body","attr","decrementContactRequestCount","countContainer","count","parseInt","text","isNaN","addClass","registerEventListeners","searchInput","ignoredKeys","tab","shift","ctrl","alt","on","go","VIEW_SEARCH","e","indexOf","keyCode","key","subscribe","CONTACT_REQUEST_ACCEPTED","CONTACT_REQUEST_DECLINED","show","val","allCounts","forEach","args","sectionType","includeFavourites","totalCountPromise","then","result","total","unreadCountPromise","unread","sectionParams","map","totalCount","unreadCount","description","get_string"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the overview page of the message drawer.\n *\n * @module     core_message/message_drawer_view_overview\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/key_codes',\n    'core/pubsub',\n    'core/str',\n    'core_message/message_drawer_router',\n    'core_message/message_drawer_routes',\n    'core_message/message_drawer_events',\n    'core_message/message_drawer_view_overview_section',\n    'core_message/message_repository'\n],\nfunction(\n    $,\n    KeyCodes,\n    PubSub,\n    Str,\n    Router,\n    Routes,\n    MessageDrawerEvents,\n    Section,\n    MessageRepository\n) {\n\n    var SELECTORS = {\n        CONTACT_REQUEST_COUNT: '[data-region=\"contact-request-count\"]',\n        FAVOURITES: '[data-region=\"view-overview-favourites\"]',\n        GROUP_MESSAGES: '[data-region=\"view-overview-group-messages\"]',\n        MESSAGES: '[data-region=\"view-overview-messages\"]',\n        SEARCH_INPUT: '[data-region=\"view-overview-search-input\"]',\n        SECTION_TOGGLE_BUTTON: '[data-toggle]'\n    };\n\n    var CONVERSATION_TYPES = {\n        PRIVATE: 1,\n        PUBLIC: 2,\n        FAVOURITE: null\n    };\n\n    var loadAllCountsPromise = null;\n\n    /**\n     * Load the total and unread conversation counts from the server for this user. This function\n     * returns a jQuery promise that will be resolved with the counts.\n     *\n     * The request is only sent once per page load and will be cached for subsequent\n     * calls to this function.\n     *\n     * @param {Number} loggedInUserId The logged in user's id\n     * @return {Object} jQuery promise\n     */\n    var loadAllCounts = function(loggedInUserId) {\n        if (loadAllCountsPromise === null) {\n            loadAllCountsPromise = MessageRepository.getAllConversationCounts(loggedInUserId);\n        }\n\n        return loadAllCountsPromise;\n    };\n\n    /**\n     * Filter a set of counts to return only the count for the given type.\n     *\n     * This is used on the result returned by the loadAllCounts function.\n     *\n     * @param {Object} counts Conversation counts indexed by conversation type.\n     * @param {String|null} type The conversation type (null for favourites only).\n     * @return {Number}\n     */\n    var filterCountsByType = function(counts, type) {\n        return type === CONVERSATION_TYPES.FAVOURITE ? counts.favourites : counts.types[type];\n    };\n\n    /**\n     * Opens one of the sections based on whether the section has unread conversations\n     * or any conversations\n     *\n     * Default section priority is favourites, groups, then messages. A section can increase\n     * in priority if it has conversations in it. It can increase even further if it has\n     * unread conversations.\n     *\n     * @param {Array} sections List of section roots, total counts, and unread counts.\n     */\n    var openSection = function(sections) {\n        var isAlreadyOpen = sections.some(function(section) {\n            var sectionRoot = section[0];\n            return Section.isVisible(sectionRoot);\n        });\n\n        if (isAlreadyOpen) {\n            // The user has already opened a section so there is nothing to do.\n            return;\n        }\n\n        // Order the sections so that sections with unread conversations are prioritised\n        // over sections without and sections with total conversations are prioritised\n        // over sections without.\n        sections.sort(function(a, b) {\n            var aTotal = a[1];\n            var aUnread = a[2];\n            var bTotal = b[1];\n            var bUnread = b[2];\n\n            if (aUnread > 0 && bUnread == 0) {\n                return -1;\n            } else if (aUnread == 0 && bUnread > 0) {\n                return 1;\n            } else if (aTotal > 0 && bTotal == 0) {\n                return -1;\n            } else if (aTotal == 0 && bTotal > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n\n        // Get the root of the first section after sorting.\n        var sectionRoot = sections[0][0];\n        var button = sectionRoot.find(SELECTORS.SECTION_TOGGLE_BUTTON);\n        // Click it to expand it.\n        button.click();\n    };\n\n    /**\n     * Get the search input text element.\n     *\n     * @param  {Object} header Overview header container element.\n     * @return {Object} The search input element.\n     */\n    var getSearchInput = function(header) {\n        return header.find(SELECTORS.SEARCH_INPUT);\n    };\n\n    /**\n     * Get the logged in user id.\n     *\n     * @param {Object} body Overview body container element.\n     * @return {String} Logged in user id.\n     */\n    var getLoggedInUserId = function(body) {\n        return body.attr('data-user-id');\n    };\n\n    /**\n     * Decrement the contact request count. If the count is zero or below then\n     * hide the count.\n     *\n     * @param {Object} header Conversation header container element.\n     * @return {Function} A function to handle decrementing the count.\n     */\n    var decrementContactRequestCount = function(header) {\n        return function() {\n            var countContainer = header.find(SELECTORS.CONTACT_REQUEST_COUNT);\n            var count = parseInt(countContainer.text(), 10);\n            count = isNaN(count) ? 0 : count - 1;\n\n            if (count <= 0) {\n                countContainer.addClass('hidden');\n            } else {\n                countContainer.text(count);\n            }\n        };\n    };\n\n    /**\n     * Listen to, and handle event in the overview header.\n     *\n     * @param {Object} header Conversation header container element.\n     */\n    var registerEventListeners = function(header) {\n        var searchInput = getSearchInput(header);\n        var ignoredKeys = [KeyCodes.tab, KeyCodes.shift, KeyCodes.ctrl, KeyCodes.alt];\n\n        searchInput.on('click', function() {\n            Router.go(Routes.VIEW_SEARCH);\n        });\n        searchInput.on('keydown', function(e) {\n            if (ignoredKeys.indexOf(e.keyCode) < 0 && e.key != 'Meta') {\n                Router.go(Routes.VIEW_SEARCH);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_ACCEPTED, decrementContactRequestCount(header));\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_DECLINED, decrementContactRequestCount(header));\n    };\n\n    /**\n     * Setup the overview page.\n     *\n     * @param {Object} header Overview header container element.\n     * @param {Object} body Overview body container element.\n     * @return {Object} jQuery promise\n     */\n    var show = function(header, body) {\n        if (!header.attr('data-init')) {\n            registerEventListeners(header);\n            header.attr('data-init', true);\n        }\n\n        getSearchInput(header).val('');\n        var loggedInUserId = getLoggedInUserId(body);\n        var allCounts = loadAllCounts(loggedInUserId);\n\n        var sections = [\n            // Favourite conversations section.\n            [body.find(SELECTORS.FAVOURITES), CONVERSATION_TYPES.FAVOURITE, true],\n            // Group conversations section.\n            [body.find(SELECTORS.GROUP_MESSAGES), CONVERSATION_TYPES.PUBLIC, false],\n            // Private conversations section.\n            [body.find(SELECTORS.MESSAGES), CONVERSATION_TYPES.PRIVATE, false]\n        ];\n\n        sections.forEach(function(args) {\n            var sectionRoot = args[0];\n            var sectionType = args[1];\n            var includeFavourites = args[2];\n            var totalCountPromise = allCounts.then(function(result) {\n                return filterCountsByType(result.total, sectionType);\n            });\n            var unreadCountPromise = allCounts.then(function(result) {\n                return filterCountsByType(result.unread, sectionType);\n            });\n\n            Section.show(sectionRoot, sectionType, includeFavourites, totalCountPromise, unreadCountPromise);\n        });\n\n        return allCounts.then(function(result) {\n                var sectionParams = sections.map(function(section) {\n                    var sectionRoot = section[0];\n                    var sectionType = section[1];\n                    var totalCount = filterCountsByType(result.total, sectionType);\n                    var unreadCount = filterCountsByType(result.unread, sectionType);\n\n                    return [sectionRoot, totalCount, unreadCount];\n                });\n\n                // Open up one of the sections for the user.\n                return openSection(sectionParams);\n            });\n    };\n\n    /**\n     * String describing this page used for aria-labels.\n     *\n     * @return {Object} jQuery promise\n     */\n    var description = function() {\n        return Str.get_string('messagedrawerviewoverview', 'core_message');\n    };\n\n    return {\n        show: show,\n        description: description\n    };\n});\n"],"file":"message_drawer_view_overview.min.js"}