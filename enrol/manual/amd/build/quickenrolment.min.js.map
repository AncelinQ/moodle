{"version":3,"sources":["../src/quickenrolment.js"],"names":["Selectors","cohortSelector","triggerButtons","unwantedHiddenFields","QuickEnrolment","contextId","initModal","jQuery","when","Str","get_strings","key","component","ModalFactory","create","type","types","SAVE_CANCEL","large","then","strings","modal","setTitle","setSaveButtonText","getRoot","on","ModalEvents","save","submitForm","bind","submitFormAjax","hidden","setBody","shown","pendingPromise","Pending","bodyPromise","getBody","html","stringIndex","find","length","resolve","catch","Notification","exception","fail","e","preventDefault","submit","form","each","remove","formData","serialize","hide","script","Config","wwwroot","ajax","processData","contentType","response","error","addNotification","message","window","M","core_formchangechecker","reset_form_dirty_state","location","reload","Fragment","loadFragment","Templates","render","init","contextid"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport jQuery from 'jquery';\nimport * as Str from 'core/str';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Config from 'core/config';\nimport Pending from 'core/pending';\n\nconst Selectors = {\n    cohortSelector: \"#id_cohortlist\",\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n    unwantedHiddenFields: \":input[value='_qf__force_multiselect_submission']\"\n};\n\nconst QuickEnrolment = class {\n    constructor(contextId) {\n        this.contextId = contextId;\n\n        this.initModal();\n    }\n\n    /**\n     * Private method\n     *\n     * @method initModal\n     * @private\n     */\n    initModal() {\n        var triggerButtons = jQuery(Selectors.triggerButtons);\n\n        jQuery.when(\n            Str.get_strings([\n                {key: 'enroluserscohorts', component: 'enrol_manual'},\n                {key: 'enrolusers', component: 'enrol_manual'},\n            ]),\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                large: true,\n            }, triggerButtons)\n        )\n        .then(function(strings, modal) {\n            this.modal = modal;\n\n            modal.setTitle(strings[1]);\n            modal.setSaveButtonText(strings[1]);\n\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n            // We want the reset the form every time it is opened.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.setBody('');\n            });\n\n            modal.getRoot().on(ModalEvents.shown, function() {\n                var pendingPromise = new Pending('enrol_manual/quickenrolment:initModal:shown');\n                var bodyPromise = this.getBody();\n                bodyPromise.then(function(html) {\n                    var stringIndex = jQuery(html).find(Selectors.cohortSelector).length ? 0 : 1;\n                    modal.setSaveButtonText(strings[stringIndex]);\n\n                    return;\n                })\n                .then(pendingPromise.resolve)\n                .catch(Notification.exception);\n\n                modal.setBody(bodyPromise);\n            }.bind(this));\n\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n    }\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    submitForm(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    }\n\n    /**\n     * Private method\n     *\n     * @method submitForm\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    submitFormAjax(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        var form = this.modal.getRoot().find('form');\n\n        // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n        // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n        var hidden = form.find(Selectors.unwantedHiddenFields);\n        hidden.each(function() {\n            jQuery(this).remove();\n        });\n\n        var formData = form.serialize();\n\n        this.modal.hide();\n\n        var settings = {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\"\n        };\n\n        var script = Config.wwwroot + '/enrol/manual/ajax.php?' + formData;\n        jQuery.ajax(script, settings)\n            .then(function(response) {\n\n                if (response.error) {\n                    Notification.addNotification({\n                        message: response.error,\n                        type: \"error\"\n                    });\n                } else {\n                    // Reload the page, don't show changed data warnings.\n                    if (typeof window.M.core_formchangechecker !== \"undefined\") {\n                        window.M.core_formchangechecker.reset_form_dirty_state();\n                    }\n                    window.location.reload();\n                }\n                return;\n            })\n            .fail(Notification.exception);\n    }\n\n    /**\n     * Private method\n     *\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    getBody() {\n        return Fragment.loadFragment('enrol_manual', 'enrol_users_form', this.contextId, {}).fail(Notification.exception);\n    }\n\n    /**\n     * Private method\n     *\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    getFooter() {\n        return Templates.render('enrol_manual/enrol_modal_footer', {});\n    }\n};\n\nexport const init = ({contextid}) => {\n    new QuickEnrolment(contextid);\n};\n"],"file":"quickenrolment.min.js"}