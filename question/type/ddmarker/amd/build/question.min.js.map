{"version":3,"sources":["../src/question.js"],"names":["define","$","dragDrop","Shapes","keys","DragDropMarkersQuestion","containerId","bgImgUrl","readOnly","visibleDropZones","getRoot","addClass","loadImage","prototype","thisQ","find","one","length","drawDropzones","repositionDrags","attr","css","bgImage","html","outerWidth","outerHeight","svg","nextColourIndex","dropZoneNo","colourClass","addDropzone","dropZone","shape","make","existingmarkertext","parse","coords","markertext","remove","append","shapeSVG","makeSvg","setAttribute","repositionDropZones","bgPosition","convertToWindowXY","Point","offset","x","y","markerspan","handles","getHandlePositions","textPos","moveHandle","root","each","key","item","input","choiceNo","getChoiceNoFromElement","getCoords","dragHome","i","drag","dragItem","hasClass","cloneNewDragItem","removeClass","itm","inputNode","noOfDrags","getClassnameNumericSuffix","dragging","val","coordsStrings","split","displayeddrags","dragHomeXY","point","left","top","convertToBgImgXY","coordsInBgImg","width","height","dragItemHome","document","getElementById","itemNo","clone","after","handleDragStart","e","dragged","target","closest","info","prepare","start","dragEnd","saveCoordsForChoice","dropped","numItems","bgImgXY","addme","innerText","join","handleKeyPress","keyCode","arrowLeft","arrowRight","arrowDown","arrowUp","space","escape","preventDefault","constrainToBgImg","windowxy","Math","min","max","bgImg","node","prefix","classes","classesarr","index","patt1","RegExp","test","patt2","match","exec","handleResize","questionManager","eventHandlersInitialised","questions","init","setupEventHandlers","on","window","handleWindowResize","question","getQuestionForEvent","hasOwnProperty","currentTarget"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question class for drag and drop marker question type, used to support the question and preview pages.\n *\n * @package    qtype_ddmarker\n * @subpackage question\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/dragdrop', 'qtype_ddmarker/shapes', 'core/key_codes'], function($, dragDrop, Shapes, keys) {\n\n    \"use strict\";\n\n    /**\n     * Object to handle one drag-drop markers question.\n     *\n     * @param {String} containerId id of the outer div for this question.\n     * @param {String} bgImgUrl the URL of the background image.\n     * @param {boolean} readOnly whether the question is being displayed read-only.\n     * @param {Object[]} visibleDropZones the geometry of any drop-zones to show.\n     *      Objects have fields shape, coords and markertext.\n     * @constructor\n     */\n    function DragDropMarkersQuestion(containerId, bgImgUrl, readOnly, visibleDropZones) {\n        this.containerId = containerId;\n        this.visibleDropZones = visibleDropZones;\n        if (readOnly) {\n            this.getRoot().addClass('qtype_ddmarker-readonly');\n        }\n        this.loadImage(bgImgUrl);\n    }\n\n    /**\n     * Load the background image is loaded, then do the rest of the display.\n     *\n     * @param {String} bgImgUrl the URL of the background image.\n     */\n    DragDropMarkersQuestion.prototype.loadImage = function(bgImgUrl) {\n        var thisQ = this;\n        this.getRoot().find('.dropbackground')\n            .one('load', function() {\n                if (thisQ.visibleDropZones.length > 0) {\n                    thisQ.drawDropzones();\n                }\n                thisQ.repositionDrags();\n            })\n            .attr('src', bgImgUrl)\n            .css({'border': '1px solid #000', 'max-width': 'none'});\n    };\n\n    /**\n     * Draws the svg shapes of any drop zones that should be visible for feedback purposes.\n     */\n    DragDropMarkersQuestion.prototype.drawDropzones = function() {\n        var bgImage = this.getRoot().find('img.dropbackground');\n\n        this.getRoot().find('div.dropzones').html('<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"dropzones\" ' +\n            'width=\"' + bgImage.outerWidth() + '\" ' +\n            'height=\"' + bgImage.outerHeight() + '\"></svg>');\n        var svg = this.getRoot().find('svg.dropzones');\n        svg.css('position', 'absolute');\n\n        var nextColourIndex = 0;\n        for (var dropZoneNo = 0; dropZoneNo < this.visibleDropZones.length; dropZoneNo++) {\n            var colourClass = 'color' + nextColourIndex;\n            nextColourIndex = (nextColourIndex + 1) % 8;\n            this.addDropzone(svg, dropZoneNo, colourClass);\n        }\n    };\n\n    /**\n     * Adds a dropzone shape with colour, coords and link provided to the array of shapes.\n     *\n     * @param {jQuery} svg the SVG image to which to add this drop zone.\n     * @param {int} dropZoneNo which drop-zone to add.\n     * @param {string} colourClass class name\n     */\n    DragDropMarkersQuestion.prototype.addDropzone = function(svg, dropZoneNo, colourClass) {\n        var dropZone = this.visibleDropZones[dropZoneNo],\n            shape = Shapes.make(dropZone.shape, ''),\n            existingmarkertext;\n        if (!shape.parse(dropZone.coords)) {\n            return;\n        }\n\n        existingmarkertext = this.getRoot().find('div.markertexts span.markertext' + dropZoneNo);\n        if (existingmarkertext.length) {\n            if (dropZone.markertext !== '') {\n                existingmarkertext.html(dropZone.markertext);\n            } else {\n                existingmarkertext.remove();\n            }\n        } else if (dropZone.markertext !== '') {\n            var classnames = 'markertext markertext' + dropZoneNo;\n            this.getRoot().find('div.markertexts').append('<span class=\"' + classnames + '\">' +\n                dropZone.markertext + '</span>');\n        }\n\n        var shapeSVG = shape.makeSvg(svg[0]);\n        shapeSVG.setAttribute('class', 'dropzone ' + colourClass);\n    };\n\n    /**\n     * Draws the drag items on the page (and drop zones if required).\n     * The idea is to re-draw all the drags and drops whenever there is a change\n     * like a widow resize or an item dropped in place.\n     */\n    DragDropMarkersQuestion.prototype.repositionDropZones = function() {\n        var svg = this.getRoot().find('svg.dropzones');\n        if (svg.length === 0) {\n            return;\n        }\n        var bgPosition = this.convertToWindowXY(new Shapes.Point(-1, 0));\n        svg.offset({'left': bgPosition.x, 'top': bgPosition.y});\n\n        for (var dropZoneNo = 0; dropZoneNo < this.visibleDropZones.length; dropZoneNo++) {\n            var markerspan = this.getRoot().find('div.ddarea div.markertexts span.markertext' + dropZoneNo);\n            if (markerspan.length === 0) {\n                continue;\n            }\n            var dropZone = this.visibleDropZones[dropZoneNo],\n                shape = Shapes.make(dropZone.shape, '');\n            if (!shape.parse(dropZone.coords)) {\n                continue;\n            }\n            var handles = shape.getHandlePositions(),\n                textPos = this.convertToWindowXY(handles.moveHandle.offset(\n                    -markerspan.outerWidth() / 2, -markerspan.outerHeight() / 2));\n            markerspan.offset({'left': textPos.x - 4, 'top': textPos.y});\n        }\n    };\n\n    /**\n     * Draws the drag items on the page (and drop zones if required).\n     * The idea is to re-draw all the drags and drops whenever there is a change\n     * like a widow resize or an item dropped in place.\n     */\n    DragDropMarkersQuestion.prototype.repositionDrags = function() {\n        var root = this.getRoot(),\n            thisQ = this;\n\n        root.find('div.dragitems .dragitem').each(function(key, item) {\n            $(item).addClass('unneeded');\n        });\n\n        root.find('input.choices').each(function(key, input) {\n            var choiceNo = thisQ.getChoiceNoFromElement(input),\n                coords = thisQ.getCoords(input),\n                dragHome = thisQ.dragHome(choiceNo);\n            for (var i = 0; i < coords.length; i++) {\n                var drag = thisQ.dragItem(choiceNo, i);\n                if (!drag.length || drag.hasClass('beingdragged')) {\n                    drag = thisQ.cloneNewDragItem(dragHome, i);\n                } else {\n                    drag.removeClass('unneeded');\n                }\n                drag.offset({'left': coords[i].x, 'top': coords[i].y});\n            }\n        });\n\n        root.find('div.dragitems .dragitem').each(function(key, itm) {\n            var item = $(itm);\n            if (item.hasClass('unneeded') && !item.hasClass('beingdragged')) {\n                item.remove();\n            }\n        });\n\n        this.repositionDropZones();\n    };\n\n    /**\n     * Determine what drag items need to be shown and\n     * return coords of all drag items except any that are currently being dragged\n     * based on contents of hidden inputs and whether drags are 'infinite' or how many\n     * drags should be shown.\n     *\n     * @param {jQuery} inputNode\n     * @returns {Point[]} coordinates of however many copies of the drag item should be shown.\n     */\n    DragDropMarkersQuestion.prototype.getCoords = function(inputNode) {\n        var root = this.getRoot(),\n            choiceNo = this.getChoiceNoFromElement(inputNode),\n            noOfDrags = Number(this.getClassnameNumericSuffix(inputNode, 'noofdrags')),\n            dragging = root.find('span.dragitem.beingdragged.choice' + choiceNo).length > 0,\n            coords = [],\n            val = $(inputNode).val();\n        if (val !== '') {\n            var coordsStrings = val.split(';');\n            for (var i = 0; i < coordsStrings.length; i++) {\n                coords[i] = this.convertToWindowXY(Shapes.Point.parse(coordsStrings[i]));\n            }\n        }\n        var displayeddrags = coords.length + (dragging ? 1 : 0);\n        if ($(inputNode).hasClass('infinite') || (displayeddrags < noOfDrags)) {\n            coords[coords.length] = this.dragHomeXY(choiceNo);\n        }\n        return coords;\n    };\n\n    /**\n     * Converts the relative x and y position coordinates into\n     * absolute x and y position coordinates.\n     *\n     * @param {Point} point relative to the background image.\n     * @returns {Point} point relative to the page.\n     */\n    DragDropMarkersQuestion.prototype.convertToWindowXY = function(point) {\n        var bgImage = this.bgImage();\n        // The +1 seems rather odd, but seems to give the best results in\n        // the three main browsers at a range of zoom levels.\n        // (Its due to the 1px border around the image, that shifts the\n        // image pixels by 1 down and to the left.)\n        return point.offset(bgImage.offset().left + 1, bgImage.offset().top + 1);\n    };\n\n    /**\n     * Utility function converting window coordinates to relative to the\n     * background image coordinates.\n     *\n     * @param {Point} point relative to the page.\n     * @returns {Point} point relative to the background image.\n     */\n    DragDropMarkersQuestion.prototype.convertToBgImgXY = function(point) {\n        var bgImage = this.bgImage();\n        return point.offset(-bgImage.offset().left - 1, -bgImage.offset().top - 1);\n    };\n\n    /**\n     * Is the point within the background image?\n     *\n     * @param {Point} point relative to the BG image.\n     * @return {boolean} true it they are.\n     */\n    DragDropMarkersQuestion.prototype.coordsInBgImg = function(point) {\n        var bgImage = this.bgImage();\n        return point.x > 0 && point.x <= bgImage.width() &&\n                point.y > 0 && point.y <= bgImage.height();\n    };\n\n    /**\n     * Returns coordinates for the home position of a choice.\n     *\n     * @param {Number} choiceNo\n     * @returns {Point} coordinates\n     */\n    DragDropMarkersQuestion.prototype.dragHomeXY = function(choiceNo) {\n        var dragItemHome = this.dragHome(choiceNo);\n        return new Shapes.Point(dragItemHome.offset().left, dragItemHome.offset().top);\n    };\n\n    /**\n     * Get the outer div for this question.\n     * @returns {jQuery} containing that div.\n     */\n    DragDropMarkersQuestion.prototype.getRoot = function() {\n        return $(document.getElementById(this.containerId));\n    };\n\n    /**\n     * Get the img that is the background image.\n     * @returns {jQuery} containing that img.\n     */\n    DragDropMarkersQuestion.prototype.bgImage = function() {\n        return this.getRoot().find('img.dropbackground');\n    };\n\n    /**\n     * Return the DOM node for this choice's home position.\n     * @param {Number} choiceNo\n     * @returns {jQuery} containing the home.\n     */\n    DragDropMarkersQuestion.prototype.dragHome = function(choiceNo) {\n        return this.getRoot().find('div.dragitems span.draghome.choice' + choiceNo);\n    };\n\n    /**\n     * Return the DOM node for a particular instance of a particular choice.\n     * @param {Number} choiceNo\n     * @param {Number} itemNo\n     * @returns {jQuery} containing the item.\n     */\n    DragDropMarkersQuestion.prototype.dragItem = function(choiceNo, itemNo) {\n        return this.getRoot().find('div.dragitems span.dragitem.choice' + choiceNo + '.item' + itemNo);\n    };\n\n    /**\n     * Create a draggable copy of the drag item.\n     *\n     * @param {jQuery} dragHome to clone\n     * @param {Number} itemNo new item number\n     * @return {jQuery} drag\n     */\n    DragDropMarkersQuestion.prototype.cloneNewDragItem = function(dragHome, itemNo) {\n        var drag = dragHome.clone(true);\n        drag.removeClass('draghome').addClass('dragitem').addClass('item' + itemNo);\n        dragHome.after(drag);\n        drag.attr('tabIndex', 0);\n        return drag;\n    };\n\n    DragDropMarkersQuestion.prototype.handleDragStart = function(e) {\n        var thisQ = this,\n            dragged = $(e.target).closest('.dragitem');\n\n        var info = dragDrop.prepare(e);\n        if (!info.start) {\n            return;\n        }\n\n        dragged.addClass('beingdragged');\n        dragDrop.start(e, dragged, function() {\n            void (1); // Nothing to do, but we need a function.\n        }, function(x, y, dragged) {\n            thisQ.dragEnd(dragged);\n        });\n    };\n\n    /**\n     * Functionality at the end of a drag drop.\n     * @param {jQuery} dragged the marker that was dragged.\n     */\n    DragDropMarkersQuestion.prototype.dragEnd = function(dragged) {\n        dragged.removeClass('beingdragged');\n        var choiceNo = this.getChoiceNoFromElement(dragged);\n        this.saveCoordsForChoice(choiceNo, dragged);\n        this.repositionDrags();\n    };\n\n    /**\n     * Save the coordinates for a dropped item in the form field.\n     * @param {Number} choiceNo which copy of the choice this was.\n     * @param {jQuery} dropped the choice that was dropped here.\n     */\n    DragDropMarkersQuestion.prototype.saveCoordsForChoice = function(choiceNo, dropped) {\n        var coords = [],\n            numItems = this.getRoot().find('span.dragitem.choice' + choiceNo).length,\n            bgImgXY,\n            addme = true;\n\n        // Re-build the coords array based on data in the ddform inputs.\n        // While long winded and unnecessary if there is only one drop item\n        // for a choice, it does account for moving any one of several drop items\n        // within a choice that have already been placed.\n        for (var i = 0; i <= numItems; i++) {\n            var drag = this.dragItem(choiceNo, i);\n            if (drag.length === 0) {\n                continue;\n            }\n\n            if (!drag.hasClass('beingdragged')) {\n                bgImgXY = this.convertToBgImgXY(new Shapes.Point(drag.offset().left, drag.offset().top));\n                if (this.coordsInBgImg(bgImgXY)) {\n                    coords[coords.length] = bgImgXY;\n                }\n            }\n\n            if (dropped && dropped.length !== 0 && (dropped[0].innerText === drag[0].innerText)) {\n                addme = false;\n            }\n        }\n\n        // If dropped has been passed it is because a new item has been dropped onto the background image\n        // so add its coordinates to the array.\n        if (addme) {\n            bgImgXY = this.convertToBgImgXY(new Shapes.Point(dropped.offset().left, dropped.offset().top));\n            if (this.coordsInBgImg(bgImgXY)) {\n                coords[coords.length] = bgImgXY;\n            }\n        }\n\n        this.getRoot().find('input.choice' + choiceNo).val(coords.join(';'));\n    };\n\n    /**\n     * Handle key down / press events on markers.\n     * @param {KeyboardEvent} e\n     */\n    DragDropMarkersQuestion.prototype.handleKeyPress = function(e) {\n        var drag = $(e.target).closest('.dragitem'),\n            point = new Shapes.Point(drag.offset().left, drag.offset().top),\n            choiceNo = this.getChoiceNoFromElement(drag);\n\n        switch (e.keyCode) {\n            case keys.arrowLeft:\n            case 65: // A.\n                point.x -= 1;\n                break;\n            case keys.arrowRight:\n            case 68: // D.\n                point.x += 1;\n                break;\n            case keys.arrowDown:\n            case 83: // S.\n                point.y += 1;\n                break;\n            case keys.arrowUp:\n            case 87: // W.\n                point.y -= 1;\n                break;\n            case keys.space:\n            case keys.escape:\n                point = null;\n                break;\n            default:\n                return; // Ingore other keys.\n        }\n        e.preventDefault();\n\n        if (point !== null) {\n            point = this.constrainToBgImg(point);\n        } else {\n            point = this.dragHomeXY(choiceNo);\n        }\n        drag.offset({'left': point.x, 'top': point.y});\n        this.saveCoordsForChoice(choiceNo, drag);\n        this.repositionDrags();\n    };\n\n    /**\n     * Makes sure the dragged item always exists within the background image area.\n     *\n     * @param {Point} windowxy\n     * @returns {Point} coordinates\n     */\n    DragDropMarkersQuestion.prototype.constrainToBgImg = function(windowxy) {\n        var bgImg = this.bgImage(),\n            bgImgXY = this.convertToBgImgXY(windowxy);\n        bgImgXY.x = Math.max(0, bgImgXY.x);\n        bgImgXY.y = Math.max(0, bgImgXY.y);\n        bgImgXY.x = Math.min(bgImg.width(), bgImgXY.x);\n        bgImgXY.y = Math.min(bgImg.height(), bgImgXY.y);\n        return this.convertToWindowXY(bgImgXY);\n    };\n\n    /**\n     * Returns the choice number for a node.\n     *\n     * @param {Element|jQuery} node\n     * @returns {Number}\n     */\n    DragDropMarkersQuestion.prototype.getChoiceNoFromElement = function(node) {\n        return Number(this.getClassnameNumericSuffix(node, 'choice'));\n    };\n\n    /**\n     * Returns the numeric part of a class with the given prefix.\n     *\n     * @param {Element|jQuery} node\n     * @param {String} prefix\n     * @returns {Number|null}\n     */\n    DragDropMarkersQuestion.prototype.getClassnameNumericSuffix = function(node, prefix) {\n        var classes = $(node).attr('class');\n        if (classes !== undefined && classes !== '') {\n            var classesarr = classes.split(' ');\n            for (var index = 0; index < classesarr.length; index++) {\n                var patt1 = new RegExp('^' + prefix + '([0-9])+$');\n                if (patt1.test(classesarr[index])) {\n                    var patt2 = new RegExp('([0-9])+$');\n                    var match = patt2.exec(classesarr[index]);\n                    return Number(match[0]);\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Handle when the window is resized.\n     */\n    DragDropMarkersQuestion.prototype.handleResize = function() {\n        this.repositionDrags();\n    };\n\n    /**\n     * Singleton that tracks all the DragDropToTextQuestions on this page, and deals\n     * with event dispatching.\n     *\n     * @type {Object}\n     */\n    var questionManager = {\n\n        /**\n         * {boolean} ensures that the event handlers are only initialised once per page.\n         */\n        eventHandlersInitialised: false,\n\n        /**\n         * {Object} all the questions on this page, indexed by containerId (id on the .que div).\n         */\n        questions: {}, // An object containing all the information about each question on the page.\n\n        /**\n         * Initialise one question.\n         *\n         * @param {String} containerId the id of the div.que that contains this question.\n         * @param {String} bgImgUrl URL fo the background image.\n         * @param {boolean} readOnly whether the question is read-only.\n         * @param {Object[]} visibleDropZones data on any drop zones to draw as part of the feedback.\n         */\n        init: function(containerId, bgImgUrl, readOnly, visibleDropZones) {\n            questionManager.questions[containerId] =\n                new DragDropMarkersQuestion(containerId, bgImgUrl, readOnly, visibleDropZones);\n            if (!questionManager.eventHandlersInitialised) {\n                questionManager.setupEventHandlers();\n                questionManager.eventHandlersInitialised = true;\n            }\n        },\n\n        /**\n         * Set up the event handlers that make this question type work. (Done once per page.)\n         */\n        setupEventHandlers: function() {\n            $('body').on('mousedown touchstart',\n                '.que.ddmarker:not(.qtype_ddmarker-readonly) div.dragitems .dragitem',\n                questionManager.handleDragStart)\n                .on('keydown keypress',\n                    '.que.ddmarker:not(.qtype_ddmarker-readonly) div.dragitems .dragitem',\n                    questionManager.handleKeyPress);\n            $(window).on('resize', questionManager.handleWindowResize);\n        },\n\n        /**\n         * Handle mouse down / touch start events on markers.\n         * @param {Event} e the DOM event.\n         */\n        handleDragStart: function(e) {\n            e.preventDefault();\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleDragStart(e);\n            }\n        },\n\n        /**\n         * Handle key down / press events on markers.\n         * @param {Event} e\n         */\n        handleKeyPress: function(e) {\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleKeyPress(e);\n            }\n        },\n\n        /**\n         * Handle when the window is resized.\n         */\n        handleWindowResize: function() {\n            for (var containerId in questionManager.questions) {\n                if (questionManager.questions.hasOwnProperty(containerId)) {\n                    questionManager.questions[containerId].handleResize();\n                }\n            }\n        },\n\n        /**\n         * Given an event, work out which question it effects.\n         * @param {Event} e the event.\n         * @returns {DragDropMarkersQuestion|undefined} The question, or undefined.\n         */\n        getQuestionForEvent: function(e) {\n            var containerId = $(e.currentTarget).closest('.que.ddmarker').attr('id');\n            return questionManager.questions[containerId];\n        }\n    };\n\n    /**\n     * @alias module:qtype_ddmarker/question\n     */\n    return {\n        /**\n         * Initialise one drag-drop markers question.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {String} bgImgUrl the URL of the background image.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         * @param {String[]} visibleDropZones the geometry of any drop-zones to show.\n         */\n        init: questionManager.init\n    };\n});\n"],"file":"question.min.js"}